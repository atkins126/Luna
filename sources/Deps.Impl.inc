{==============================================================================
        .
     .--:         :
    ----        :---:
  .-----         .-.
 .------          .
 -------.
.--------               :
.---------             .:.
 ----------:            .
 :-----------:
  --------------:.         .:.
   :------------------------
    .---------------------.
       :---------------:.
          ..:::::::..
              ...
     _
    | |    _  _  _ _   __ _
    | |__ | || || ' \ / _` |
    |____| \_,_||_||_|\__,_|
         Game Toolkit™

Copyright © 2022 tinyBigGAMES™ LLC
All Rights Reserved.

Website: https://tinybiggames.com
Email  : support@tinybiggames.com

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

1. The origin of this software must not be misrepresented; you must not
   claim that you wrote the original software. If you use this software in
   a product, an acknowledgment in the product documentation would be
   appreciated but is not required.

2. Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.

3. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in
   the documentation and/or other materials provided with the
   distribution.

4. Neither the name of the copyright holder nor the names of its
   contributors may be used to endorse or promote products derived
   from this software without specific prior written permission.

5. All video, audio, graphics and other content accessed through the
   software in this distro is the property of the applicable content owner
   and may be protected by applicable copyright law. This License gives
   Customer no rights to such content, and Company disclaims any liability
   for misuse of content.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE.
============================================================================= }

{$R Deps.res}

procedure GetExports(const aDLLHandle: THandle);
begin
{$REGION 'Exports'}
  if aDllHandle = 0 then Exit;
  __debugbreak := GetProcAddress(aDLLHandle, '__debugbreak');
  aacircleColor := GetProcAddress(aDLLHandle, 'aacircleColor');
  aacircleRGBA := GetProcAddress(aDLLHandle, 'aacircleRGBA');
  aaellipseColor := GetProcAddress(aDLLHandle, 'aaellipseColor');
  aaellipseRGBA := GetProcAddress(aDLLHandle, 'aaellipseRGBA');
  aalineColor := GetProcAddress(aDLLHandle, 'aalineColor');
  aalineRGBA := GetProcAddress(aDLLHandle, 'aalineRGBA');
  aapolygonColor := GetProcAddress(aDLLHandle, 'aapolygonColor');
  aapolygonRGBA := GetProcAddress(aDLLHandle, 'aapolygonRGBA');
  aatrigonColor := GetProcAddress(aDLLHandle, 'aatrigonColor');
  aatrigonRGBA := GetProcAddress(aDLLHandle, 'aatrigonRGBA');
  arcColor := GetProcAddress(aDLLHandle, 'arcColor');
  arcRGBA := GetProcAddress(aDLLHandle, 'arcRGBA');
  bezierColor := GetProcAddress(aDLLHandle, 'bezierColor');
  bezierRGBA := GetProcAddress(aDLLHandle, 'bezierRGBA');
  boxColor := GetProcAddress(aDLLHandle, 'boxColor');
  boxRGBA := GetProcAddress(aDLLHandle, 'boxRGBA');
  characterColor := GetProcAddress(aDLLHandle, 'characterColor');
  characterRGBA := GetProcAddress(aDLLHandle, 'characterRGBA');
  circleColor := GetProcAddress(aDLLHandle, 'circleColor');
  circleRGBA := GetProcAddress(aDLLHandle, 'circleRGBA');
  crc32 := GetProcAddress(aDLLHandle, 'crc32');
  ellipseColor := GetProcAddress(aDLLHandle, 'ellipseColor');
  ellipseRGBA := GetProcAddress(aDLLHandle, 'ellipseRGBA');
  filledCircleColor := GetProcAddress(aDLLHandle, 'filledCircleColor');
  filledCircleRGBA := GetProcAddress(aDLLHandle, 'filledCircleRGBA');
  filledEllipseColor := GetProcAddress(aDLLHandle, 'filledEllipseColor');
  filledEllipseRGBA := GetProcAddress(aDLLHandle, 'filledEllipseRGBA');
  filledPieColor := GetProcAddress(aDLLHandle, 'filledPieColor');
  filledPieRGBA := GetProcAddress(aDLLHandle, 'filledPieRGBA');
  filledPolygonColor := GetProcAddress(aDLLHandle, 'filledPolygonColor');
  filledPolygonRGBA := GetProcAddress(aDLLHandle, 'filledPolygonRGBA');
  filledTrigonColor := GetProcAddress(aDLLHandle, 'filledTrigonColor');
  filledTrigonRGBA := GetProcAddress(aDLLHandle, 'filledTrigonRGBA');
  gfxPrimitivesSetFont := GetProcAddress(aDLLHandle, 'gfxPrimitivesSetFont');
  gfxPrimitivesSetFontRotation := GetProcAddress(aDLLHandle, 'gfxPrimitivesSetFontRotation');
  hlineColor := GetProcAddress(aDLLHandle, 'hlineColor');
  hlineRGBA := GetProcAddress(aDLLHandle, 'hlineRGBA');
  IMG_FreeAnimation := GetProcAddress(aDLLHandle, 'IMG_FreeAnimation');
  IMG_Init := GetProcAddress(aDLLHandle, 'IMG_Init');
  IMG_isAVIF := GetProcAddress(aDLLHandle, 'IMG_isAVIF');
  IMG_isBMP := GetProcAddress(aDLLHandle, 'IMG_isBMP');
  IMG_isCUR := GetProcAddress(aDLLHandle, 'IMG_isCUR');
  IMG_isGIF := GetProcAddress(aDLLHandle, 'IMG_isGIF');
  IMG_isICO := GetProcAddress(aDLLHandle, 'IMG_isICO');
  IMG_isJPG := GetProcAddress(aDLLHandle, 'IMG_isJPG');
  IMG_isJXL := GetProcAddress(aDLLHandle, 'IMG_isJXL');
  IMG_isLBM := GetProcAddress(aDLLHandle, 'IMG_isLBM');
  IMG_isPCX := GetProcAddress(aDLLHandle, 'IMG_isPCX');
  IMG_isPNG := GetProcAddress(aDLLHandle, 'IMG_isPNG');
  IMG_isPNM := GetProcAddress(aDLLHandle, 'IMG_isPNM');
  IMG_isQOI := GetProcAddress(aDLLHandle, 'IMG_isQOI');
  IMG_isSVG := GetProcAddress(aDLLHandle, 'IMG_isSVG');
  IMG_isTIF := GetProcAddress(aDLLHandle, 'IMG_isTIF');
  IMG_isWEBP := GetProcAddress(aDLLHandle, 'IMG_isWEBP');
  IMG_isXCF := GetProcAddress(aDLLHandle, 'IMG_isXCF');
  IMG_isXPM := GetProcAddress(aDLLHandle, 'IMG_isXPM');
  IMG_isXV := GetProcAddress(aDLLHandle, 'IMG_isXV');
  IMG_Linked_Version := GetProcAddress(aDLLHandle, 'IMG_Linked_Version');
  IMG_Load := GetProcAddress(aDLLHandle, 'IMG_Load');
  IMG_Load_RW := GetProcAddress(aDLLHandle, 'IMG_Load_RW');
  IMG_LoadAnimation := GetProcAddress(aDLLHandle, 'IMG_LoadAnimation');
  IMG_LoadAnimation_RW := GetProcAddress(aDLLHandle, 'IMG_LoadAnimation_RW');
  IMG_LoadAnimationTyped_RW := GetProcAddress(aDLLHandle, 'IMG_LoadAnimationTyped_RW');
  IMG_LoadAVIF_RW := GetProcAddress(aDLLHandle, 'IMG_LoadAVIF_RW');
  IMG_LoadBMP_RW := GetProcAddress(aDLLHandle, 'IMG_LoadBMP_RW');
  IMG_LoadCUR_RW := GetProcAddress(aDLLHandle, 'IMG_LoadCUR_RW');
  IMG_LoadGIF_RW := GetProcAddress(aDLLHandle, 'IMG_LoadGIF_RW');
  IMG_LoadGIFAnimation_RW := GetProcAddress(aDLLHandle, 'IMG_LoadGIFAnimation_RW');
  IMG_LoadICO_RW := GetProcAddress(aDLLHandle, 'IMG_LoadICO_RW');
  IMG_LoadJPG_RW := GetProcAddress(aDLLHandle, 'IMG_LoadJPG_RW');
  IMG_LoadJXL_RW := GetProcAddress(aDLLHandle, 'IMG_LoadJXL_RW');
  IMG_LoadLBM_RW := GetProcAddress(aDLLHandle, 'IMG_LoadLBM_RW');
  IMG_LoadPCX_RW := GetProcAddress(aDLLHandle, 'IMG_LoadPCX_RW');
  IMG_LoadPNG_RW := GetProcAddress(aDLLHandle, 'IMG_LoadPNG_RW');
  IMG_LoadPNM_RW := GetProcAddress(aDLLHandle, 'IMG_LoadPNM_RW');
  IMG_LoadQOI_RW := GetProcAddress(aDLLHandle, 'IMG_LoadQOI_RW');
  IMG_LoadSizedSVG_RW := GetProcAddress(aDLLHandle, 'IMG_LoadSizedSVG_RW');
  IMG_LoadSVG_RW := GetProcAddress(aDLLHandle, 'IMG_LoadSVG_RW');
  IMG_LoadTexture := GetProcAddress(aDLLHandle, 'IMG_LoadTexture');
  IMG_LoadTexture_RW := GetProcAddress(aDLLHandle, 'IMG_LoadTexture_RW');
  IMG_LoadTextureTyped_RW := GetProcAddress(aDLLHandle, 'IMG_LoadTextureTyped_RW');
  IMG_LoadTGA_RW := GetProcAddress(aDLLHandle, 'IMG_LoadTGA_RW');
  IMG_LoadTIF_RW := GetProcAddress(aDLLHandle, 'IMG_LoadTIF_RW');
  IMG_LoadTyped_RW := GetProcAddress(aDLLHandle, 'IMG_LoadTyped_RW');
  IMG_LoadWEBP_RW := GetProcAddress(aDLLHandle, 'IMG_LoadWEBP_RW');
  IMG_LoadXCF_RW := GetProcAddress(aDLLHandle, 'IMG_LoadXCF_RW');
  IMG_LoadXPM_RW := GetProcAddress(aDLLHandle, 'IMG_LoadXPM_RW');
  IMG_LoadXV_RW := GetProcAddress(aDLLHandle, 'IMG_LoadXV_RW');
  IMG_Quit := GetProcAddress(aDLLHandle, 'IMG_Quit');
  IMG_ReadXPMFromArray := GetProcAddress(aDLLHandle, 'IMG_ReadXPMFromArray');
  IMG_ReadXPMFromArrayToRGB888 := GetProcAddress(aDLLHandle, 'IMG_ReadXPMFromArrayToRGB888');
  IMG_SaveJPG := GetProcAddress(aDLLHandle, 'IMG_SaveJPG');
  IMG_SaveJPG_RW := GetProcAddress(aDLLHandle, 'IMG_SaveJPG_RW');
  IMG_SavePNG := GetProcAddress(aDLLHandle, 'IMG_SavePNG');
  IMG_SavePNG_RW := GetProcAddress(aDLLHandle, 'IMG_SavePNG_RW');
  lineColor := GetProcAddress(aDLLHandle, 'lineColor');
  lineRGBA := GetProcAddress(aDLLHandle, 'lineRGBA');
  Mix_AllocateChannels := GetProcAddress(aDLLHandle, 'Mix_AllocateChannels');
  Mix_ChannelFinished := GetProcAddress(aDLLHandle, 'Mix_ChannelFinished');
  Mix_CloseAudio := GetProcAddress(aDLLHandle, 'Mix_CloseAudio');
  Mix_EachSoundFont := GetProcAddress(aDLLHandle, 'Mix_EachSoundFont');
  Mix_ExpireChannel := GetProcAddress(aDLLHandle, 'Mix_ExpireChannel');
  Mix_FadeInChannel := GetProcAddress(aDLLHandle, 'Mix_FadeInChannel');
  Mix_FadeInChannelTimed := GetProcAddress(aDLLHandle, 'Mix_FadeInChannelTimed');
  Mix_FadeInMusic := GetProcAddress(aDLLHandle, 'Mix_FadeInMusic');
  Mix_FadeInMusicPos := GetProcAddress(aDLLHandle, 'Mix_FadeInMusicPos');
  Mix_FadeOutChannel := GetProcAddress(aDLLHandle, 'Mix_FadeOutChannel');
  Mix_FadeOutGroup := GetProcAddress(aDLLHandle, 'Mix_FadeOutGroup');
  Mix_FadeOutMusic := GetProcAddress(aDLLHandle, 'Mix_FadeOutMusic');
  Mix_FadingChannel := GetProcAddress(aDLLHandle, 'Mix_FadingChannel');
  Mix_FadingMusic := GetProcAddress(aDLLHandle, 'Mix_FadingMusic');
  Mix_FreeChunk := GetProcAddress(aDLLHandle, 'Mix_FreeChunk');
  Mix_FreeMusic := GetProcAddress(aDLLHandle, 'Mix_FreeMusic');
  Mix_GetChunk := GetProcAddress(aDLLHandle, 'Mix_GetChunk');
  Mix_GetChunkDecoder := GetProcAddress(aDLLHandle, 'Mix_GetChunkDecoder');
  Mix_GetMusicAlbumTag := GetProcAddress(aDLLHandle, 'Mix_GetMusicAlbumTag');
  Mix_GetMusicArtistTag := GetProcAddress(aDLLHandle, 'Mix_GetMusicArtistTag');
  Mix_GetMusicCopyrightTag := GetProcAddress(aDLLHandle, 'Mix_GetMusicCopyrightTag');
  Mix_GetMusicDecoder := GetProcAddress(aDLLHandle, 'Mix_GetMusicDecoder');
  Mix_GetMusicHookData := GetProcAddress(aDLLHandle, 'Mix_GetMusicHookData');
  Mix_GetMusicLoopEndTime := GetProcAddress(aDLLHandle, 'Mix_GetMusicLoopEndTime');
  Mix_GetMusicLoopLengthTime := GetProcAddress(aDLLHandle, 'Mix_GetMusicLoopLengthTime');
  Mix_GetMusicLoopStartTime := GetProcAddress(aDLLHandle, 'Mix_GetMusicLoopStartTime');
  Mix_GetMusicPosition := GetProcAddress(aDLLHandle, 'Mix_GetMusicPosition');
  Mix_GetMusicTitle := GetProcAddress(aDLLHandle, 'Mix_GetMusicTitle');
  Mix_GetMusicTitleTag := GetProcAddress(aDLLHandle, 'Mix_GetMusicTitleTag');
  Mix_GetMusicType := GetProcAddress(aDLLHandle, 'Mix_GetMusicType');
  Mix_GetMusicVolume := GetProcAddress(aDLLHandle, 'Mix_GetMusicVolume');
  Mix_GetNumChunkDecoders := GetProcAddress(aDLLHandle, 'Mix_GetNumChunkDecoders');
  Mix_GetNumMusicDecoders := GetProcAddress(aDLLHandle, 'Mix_GetNumMusicDecoders');
  Mix_GetSoundFonts := GetProcAddress(aDLLHandle, 'Mix_GetSoundFonts');
  Mix_GetSynchroValue := GetProcAddress(aDLLHandle, 'Mix_GetSynchroValue');
  Mix_GetTimidityCfg := GetProcAddress(aDLLHandle, 'Mix_GetTimidityCfg');
  Mix_GroupAvailable := GetProcAddress(aDLLHandle, 'Mix_GroupAvailable');
  Mix_GroupChannel := GetProcAddress(aDLLHandle, 'Mix_GroupChannel');
  Mix_GroupChannels := GetProcAddress(aDLLHandle, 'Mix_GroupChannels');
  Mix_GroupCount := GetProcAddress(aDLLHandle, 'Mix_GroupCount');
  Mix_GroupNewer := GetProcAddress(aDLLHandle, 'Mix_GroupNewer');
  Mix_GroupOldest := GetProcAddress(aDLLHandle, 'Mix_GroupOldest');
  Mix_HaltChannel := GetProcAddress(aDLLHandle, 'Mix_HaltChannel');
  Mix_HaltGroup := GetProcAddress(aDLLHandle, 'Mix_HaltGroup');
  Mix_HaltMusic := GetProcAddress(aDLLHandle, 'Mix_HaltMusic');
  Mix_HasChunkDecoder := GetProcAddress(aDLLHandle, 'Mix_HasChunkDecoder');
  Mix_HasMusicDecoder := GetProcAddress(aDLLHandle, 'Mix_HasMusicDecoder');
  Mix_HookMusic := GetProcAddress(aDLLHandle, 'Mix_HookMusic');
  Mix_HookMusicFinished := GetProcAddress(aDLLHandle, 'Mix_HookMusicFinished');
  Mix_Init := GetProcAddress(aDLLHandle, 'Mix_Init');
  Mix_Linked_Version := GetProcAddress(aDLLHandle, 'Mix_Linked_Version');
  Mix_LoadMUS := GetProcAddress(aDLLHandle, 'Mix_LoadMUS');
  Mix_LoadMUS_RW := GetProcAddress(aDLLHandle, 'Mix_LoadMUS_RW');
  Mix_LoadMUSType_RW := GetProcAddress(aDLLHandle, 'Mix_LoadMUSType_RW');
  Mix_LoadWAV := GetProcAddress(aDLLHandle, 'Mix_LoadWAV');
  Mix_LoadWAV_RW := GetProcAddress(aDLLHandle, 'Mix_LoadWAV_RW');
  Mix_MasterVolume := GetProcAddress(aDLLHandle, 'Mix_MasterVolume');
  Mix_ModMusicJumpToOrder := GetProcAddress(aDLLHandle, 'Mix_ModMusicJumpToOrder');
  Mix_MusicDuration := GetProcAddress(aDLLHandle, 'Mix_MusicDuration');
  Mix_OpenAudio := GetProcAddress(aDLLHandle, 'Mix_OpenAudio');
  Mix_OpenAudioDevice := GetProcAddress(aDLLHandle, 'Mix_OpenAudioDevice');
  Mix_Pause := GetProcAddress(aDLLHandle, 'Mix_Pause');
  Mix_Paused := GetProcAddress(aDLLHandle, 'Mix_Paused');
  Mix_PausedMusic := GetProcAddress(aDLLHandle, 'Mix_PausedMusic');
  Mix_PauseMusic := GetProcAddress(aDLLHandle, 'Mix_PauseMusic');
  Mix_PlayChannel := GetProcAddress(aDLLHandle, 'Mix_PlayChannel');
  Mix_PlayChannelTimed := GetProcAddress(aDLLHandle, 'Mix_PlayChannelTimed');
  Mix_Playing := GetProcAddress(aDLLHandle, 'Mix_Playing');
  Mix_PlayingMusic := GetProcAddress(aDLLHandle, 'Mix_PlayingMusic');
  Mix_PlayMusic := GetProcAddress(aDLLHandle, 'Mix_PlayMusic');
  Mix_QuerySpec := GetProcAddress(aDLLHandle, 'Mix_QuerySpec');
  Mix_QuickLoad_RAW := GetProcAddress(aDLLHandle, 'Mix_QuickLoad_RAW');
  Mix_QuickLoad_WAV := GetProcAddress(aDLLHandle, 'Mix_QuickLoad_WAV');
  Mix_Quit := GetProcAddress(aDLLHandle, 'Mix_Quit');
  Mix_RegisterEffect := GetProcAddress(aDLLHandle, 'Mix_RegisterEffect');
  Mix_ReserveChannels := GetProcAddress(aDLLHandle, 'Mix_ReserveChannels');
  Mix_Resume := GetProcAddress(aDLLHandle, 'Mix_Resume');
  Mix_ResumeMusic := GetProcAddress(aDLLHandle, 'Mix_ResumeMusic');
  Mix_RewindMusic := GetProcAddress(aDLLHandle, 'Mix_RewindMusic');
  Mix_SetDistance := GetProcAddress(aDLLHandle, 'Mix_SetDistance');
  Mix_SetMusicCMD := GetProcAddress(aDLLHandle, 'Mix_SetMusicCMD');
  Mix_SetMusicPosition := GetProcAddress(aDLLHandle, 'Mix_SetMusicPosition');
  Mix_SetPanning := GetProcAddress(aDLLHandle, 'Mix_SetPanning');
  Mix_SetPosition := GetProcAddress(aDLLHandle, 'Mix_SetPosition');
  Mix_SetPostMix := GetProcAddress(aDLLHandle, 'Mix_SetPostMix');
  Mix_SetReverseStereo := GetProcAddress(aDLLHandle, 'Mix_SetReverseStereo');
  Mix_SetSoundFonts := GetProcAddress(aDLLHandle, 'Mix_SetSoundFonts');
  Mix_SetSynchroValue := GetProcAddress(aDLLHandle, 'Mix_SetSynchroValue');
  Mix_SetTimidityCfg := GetProcAddress(aDLLHandle, 'Mix_SetTimidityCfg');
  Mix_UnregisterAllEffects := GetProcAddress(aDLLHandle, 'Mix_UnregisterAllEffects');
  Mix_UnregisterEffect := GetProcAddress(aDLLHandle, 'Mix_UnregisterEffect');
  Mix_Volume := GetProcAddress(aDLLHandle, 'Mix_Volume');
  Mix_VolumeChunk := GetProcAddress(aDLLHandle, 'Mix_VolumeChunk');
  Mix_VolumeMusic := GetProcAddress(aDLLHandle, 'Mix_VolumeMusic');
  nk__begin := GetProcAddress(aDLLHandle, 'nk__begin');
  nk__draw_begin := GetProcAddress(aDLLHandle, 'nk__draw_begin');
  nk__draw_end := GetProcAddress(aDLLHandle, 'nk__draw_end');
  nk__draw_list_begin := GetProcAddress(aDLLHandle, 'nk__draw_list_begin');
  nk__draw_list_end := GetProcAddress(aDLLHandle, 'nk__draw_list_end');
  nk__draw_list_next := GetProcAddress(aDLLHandle, 'nk__draw_list_next');
  nk__draw_next := GetProcAddress(aDLLHandle, 'nk__draw_next');
  nk__next := GetProcAddress(aDLLHandle, 'nk__next');
  nk_begin := GetProcAddress(aDLLHandle, 'nk_begin');
  nk_begin_titled := GetProcAddress(aDLLHandle, 'nk_begin_titled');
  nk_buffer_clear := GetProcAddress(aDLLHandle, 'nk_buffer_clear');
  nk_buffer_free := GetProcAddress(aDLLHandle, 'nk_buffer_free');
  nk_buffer_info := GetProcAddress(aDLLHandle, 'nk_buffer_info');
  nk_buffer_init := GetProcAddress(aDLLHandle, 'nk_buffer_init');
  nk_buffer_init_default := GetProcAddress(aDLLHandle, 'nk_buffer_init_default');
  nk_buffer_init_fixed := GetProcAddress(aDLLHandle, 'nk_buffer_init_fixed');
  nk_buffer_mark := GetProcAddress(aDLLHandle, 'nk_buffer_mark');
  nk_buffer_memory := GetProcAddress(aDLLHandle, 'nk_buffer_memory');
  nk_buffer_memory_const := GetProcAddress(aDLLHandle, 'nk_buffer_memory_const');
  nk_buffer_push := GetProcAddress(aDLLHandle, 'nk_buffer_push');
  nk_buffer_reset := GetProcAddress(aDLLHandle, 'nk_buffer_reset');
  nk_buffer_total := GetProcAddress(aDLLHandle, 'nk_buffer_total');
  nk_button_color := GetProcAddress(aDLLHandle, 'nk_button_color');
  nk_button_image := GetProcAddress(aDLLHandle, 'nk_button_image');
  nk_button_image_label := GetProcAddress(aDLLHandle, 'nk_button_image_label');
  nk_button_image_label_styled := GetProcAddress(aDLLHandle, 'nk_button_image_label_styled');
  nk_button_image_styled := GetProcAddress(aDLLHandle, 'nk_button_image_styled');
  nk_button_image_text := GetProcAddress(aDLLHandle, 'nk_button_image_text');
  nk_button_image_text_styled := GetProcAddress(aDLLHandle, 'nk_button_image_text_styled');
  nk_button_label := GetProcAddress(aDLLHandle, 'nk_button_label');
  nk_button_label_styled := GetProcAddress(aDLLHandle, 'nk_button_label_styled');
  nk_button_pop_behavior := GetProcAddress(aDLLHandle, 'nk_button_pop_behavior');
  nk_button_push_behavior := GetProcAddress(aDLLHandle, 'nk_button_push_behavior');
  nk_button_set_behavior := GetProcAddress(aDLLHandle, 'nk_button_set_behavior');
  nk_button_symbol := GetProcAddress(aDLLHandle, 'nk_button_symbol');
  nk_button_symbol_label := GetProcAddress(aDLLHandle, 'nk_button_symbol_label');
  nk_button_symbol_label_styled := GetProcAddress(aDLLHandle, 'nk_button_symbol_label_styled');
  nk_button_symbol_styled := GetProcAddress(aDLLHandle, 'nk_button_symbol_styled');
  nk_button_symbol_text := GetProcAddress(aDLLHandle, 'nk_button_symbol_text');
  nk_button_symbol_text_styled := GetProcAddress(aDLLHandle, 'nk_button_symbol_text_styled');
  nk_button_text := GetProcAddress(aDLLHandle, 'nk_button_text');
  nk_button_text_styled := GetProcAddress(aDLLHandle, 'nk_button_text_styled');
  nk_chart_add_slot := GetProcAddress(aDLLHandle, 'nk_chart_add_slot');
  nk_chart_add_slot_colored := GetProcAddress(aDLLHandle, 'nk_chart_add_slot_colored');
  nk_chart_begin := GetProcAddress(aDLLHandle, 'nk_chart_begin');
  nk_chart_begin_colored := GetProcAddress(aDLLHandle, 'nk_chart_begin_colored');
  nk_chart_end := GetProcAddress(aDLLHandle, 'nk_chart_end');
  nk_chart_push := GetProcAddress(aDLLHandle, 'nk_chart_push');
  nk_chart_push_slot := GetProcAddress(aDLLHandle, 'nk_chart_push_slot');
  nk_check_flags_label := GetProcAddress(aDLLHandle, 'nk_check_flags_label');
  nk_check_flags_text := GetProcAddress(aDLLHandle, 'nk_check_flags_text');
  nk_check_label := GetProcAddress(aDLLHandle, 'nk_check_label');
  nk_check_text := GetProcAddress(aDLLHandle, 'nk_check_text');
  nk_checkbox_flags_label := GetProcAddress(aDLLHandle, 'nk_checkbox_flags_label');
  nk_checkbox_flags_text := GetProcAddress(aDLLHandle, 'nk_checkbox_flags_text');
  nk_checkbox_label := GetProcAddress(aDLLHandle, 'nk_checkbox_label');
  nk_checkbox_text := GetProcAddress(aDLLHandle, 'nk_checkbox_text');
  nk_clear := GetProcAddress(aDLLHandle, 'nk_clear');
  nk_color_cf := GetProcAddress(aDLLHandle, 'nk_color_cf');
  nk_color_d := GetProcAddress(aDLLHandle, 'nk_color_d');
  nk_color_dv := GetProcAddress(aDLLHandle, 'nk_color_dv');
  nk_color_f := GetProcAddress(aDLLHandle, 'nk_color_f');
  nk_color_fv := GetProcAddress(aDLLHandle, 'nk_color_fv');
  nk_color_hex_rgb := GetProcAddress(aDLLHandle, 'nk_color_hex_rgb');
  nk_color_hex_rgba := GetProcAddress(aDLLHandle, 'nk_color_hex_rgba');
  nk_color_hsv_b := GetProcAddress(aDLLHandle, 'nk_color_hsv_b');
  nk_color_hsv_bv := GetProcAddress(aDLLHandle, 'nk_color_hsv_bv');
  nk_color_hsv_f := GetProcAddress(aDLLHandle, 'nk_color_hsv_f');
  nk_color_hsv_fv := GetProcAddress(aDLLHandle, 'nk_color_hsv_fv');
  nk_color_hsv_i := GetProcAddress(aDLLHandle, 'nk_color_hsv_i');
  nk_color_hsv_iv := GetProcAddress(aDLLHandle, 'nk_color_hsv_iv');
  nk_color_hsva_b := GetProcAddress(aDLLHandle, 'nk_color_hsva_b');
  nk_color_hsva_bv := GetProcAddress(aDLLHandle, 'nk_color_hsva_bv');
  nk_color_hsva_f := GetProcAddress(aDLLHandle, 'nk_color_hsva_f');
  nk_color_hsva_fv := GetProcAddress(aDLLHandle, 'nk_color_hsva_fv');
  nk_color_hsva_i := GetProcAddress(aDLLHandle, 'nk_color_hsva_i');
  nk_color_hsva_iv := GetProcAddress(aDLLHandle, 'nk_color_hsva_iv');
  nk_color_pick := GetProcAddress(aDLLHandle, 'nk_color_pick');
  nk_color_picker := GetProcAddress(aDLLHandle, 'nk_color_picker');
  nk_color_u32 := GetProcAddress(aDLLHandle, 'nk_color_u32');
  nk_colorf_hsva_f := GetProcAddress(aDLLHandle, 'nk_colorf_hsva_f');
  nk_colorf_hsva_fv := GetProcAddress(aDLLHandle, 'nk_colorf_hsva_fv');
  nk_combo := GetProcAddress(aDLLHandle, 'nk_combo');
  nk_combo_begin_color := GetProcAddress(aDLLHandle, 'nk_combo_begin_color');
  nk_combo_begin_image := GetProcAddress(aDLLHandle, 'nk_combo_begin_image');
  nk_combo_begin_image_label := GetProcAddress(aDLLHandle, 'nk_combo_begin_image_label');
  nk_combo_begin_image_text := GetProcAddress(aDLLHandle, 'nk_combo_begin_image_text');
  nk_combo_begin_label := GetProcAddress(aDLLHandle, 'nk_combo_begin_label');
  nk_combo_begin_symbol := GetProcAddress(aDLLHandle, 'nk_combo_begin_symbol');
  nk_combo_begin_symbol_label := GetProcAddress(aDLLHandle, 'nk_combo_begin_symbol_label');
  nk_combo_begin_symbol_text := GetProcAddress(aDLLHandle, 'nk_combo_begin_symbol_text');
  nk_combo_begin_text := GetProcAddress(aDLLHandle, 'nk_combo_begin_text');
  nk_combo_callback := GetProcAddress(aDLLHandle, 'nk_combo_callback');
  nk_combo_close := GetProcAddress(aDLLHandle, 'nk_combo_close');
  nk_combo_end := GetProcAddress(aDLLHandle, 'nk_combo_end');
  nk_combo_item_image_label := GetProcAddress(aDLLHandle, 'nk_combo_item_image_label');
  nk_combo_item_image_text := GetProcAddress(aDLLHandle, 'nk_combo_item_image_text');
  nk_combo_item_label := GetProcAddress(aDLLHandle, 'nk_combo_item_label');
  nk_combo_item_symbol_label := GetProcAddress(aDLLHandle, 'nk_combo_item_symbol_label');
  nk_combo_item_symbol_text := GetProcAddress(aDLLHandle, 'nk_combo_item_symbol_text');
  nk_combo_item_text := GetProcAddress(aDLLHandle, 'nk_combo_item_text');
  nk_combo_separator := GetProcAddress(aDLLHandle, 'nk_combo_separator');
  nk_combo_string := GetProcAddress(aDLLHandle, 'nk_combo_string');
  nk_combobox := GetProcAddress(aDLLHandle, 'nk_combobox');
  nk_combobox_callback := GetProcAddress(aDLLHandle, 'nk_combobox_callback');
  nk_combobox_separator := GetProcAddress(aDLLHandle, 'nk_combobox_separator');
  nk_combobox_string := GetProcAddress(aDLLHandle, 'nk_combobox_string');
  nk_contextual_begin := GetProcAddress(aDLLHandle, 'nk_contextual_begin');
  nk_contextual_close := GetProcAddress(aDLLHandle, 'nk_contextual_close');
  nk_contextual_end := GetProcAddress(aDLLHandle, 'nk_contextual_end');
  nk_contextual_item_image_label := GetProcAddress(aDLLHandle, 'nk_contextual_item_image_label');
  nk_contextual_item_image_text := GetProcAddress(aDLLHandle, 'nk_contextual_item_image_text');
  nk_contextual_item_label := GetProcAddress(aDLLHandle, 'nk_contextual_item_label');
  nk_contextual_item_symbol_label := GetProcAddress(aDLLHandle, 'nk_contextual_item_symbol_label');
  nk_contextual_item_symbol_text := GetProcAddress(aDLLHandle, 'nk_contextual_item_symbol_text');
  nk_contextual_item_text := GetProcAddress(aDLLHandle, 'nk_contextual_item_text');
  nk_convert := GetProcAddress(aDLLHandle, 'nk_convert');
  nk_draw_image := GetProcAddress(aDLLHandle, 'nk_draw_image');
  nk_draw_list_add_image := GetProcAddress(aDLLHandle, 'nk_draw_list_add_image');
  nk_draw_list_add_text := GetProcAddress(aDLLHandle, 'nk_draw_list_add_text');
  nk_draw_list_fill_circle := GetProcAddress(aDLLHandle, 'nk_draw_list_fill_circle');
  nk_draw_list_fill_poly_convex := GetProcAddress(aDLLHandle, 'nk_draw_list_fill_poly_convex');
  nk_draw_list_fill_rect := GetProcAddress(aDLLHandle, 'nk_draw_list_fill_rect');
  nk_draw_list_fill_rect_multi_color := GetProcAddress(aDLLHandle, 'nk_draw_list_fill_rect_multi_color');
  nk_draw_list_fill_triangle := GetProcAddress(aDLLHandle, 'nk_draw_list_fill_triangle');
  nk_draw_list_init := GetProcAddress(aDLLHandle, 'nk_draw_list_init');
  nk_draw_list_path_arc_to := GetProcAddress(aDLLHandle, 'nk_draw_list_path_arc_to');
  nk_draw_list_path_arc_to_fast := GetProcAddress(aDLLHandle, 'nk_draw_list_path_arc_to_fast');
  nk_draw_list_path_clear := GetProcAddress(aDLLHandle, 'nk_draw_list_path_clear');
  nk_draw_list_path_curve_to := GetProcAddress(aDLLHandle, 'nk_draw_list_path_curve_to');
  nk_draw_list_path_fill := GetProcAddress(aDLLHandle, 'nk_draw_list_path_fill');
  nk_draw_list_path_line_to := GetProcAddress(aDLLHandle, 'nk_draw_list_path_line_to');
  nk_draw_list_path_rect_to := GetProcAddress(aDLLHandle, 'nk_draw_list_path_rect_to');
  nk_draw_list_path_stroke := GetProcAddress(aDLLHandle, 'nk_draw_list_path_stroke');
  nk_draw_list_setup := GetProcAddress(aDLLHandle, 'nk_draw_list_setup');
  nk_draw_list_stroke_circle := GetProcAddress(aDLLHandle, 'nk_draw_list_stroke_circle');
  nk_draw_list_stroke_curve := GetProcAddress(aDLLHandle, 'nk_draw_list_stroke_curve');
  nk_draw_list_stroke_line := GetProcAddress(aDLLHandle, 'nk_draw_list_stroke_line');
  nk_draw_list_stroke_poly_line := GetProcAddress(aDLLHandle, 'nk_draw_list_stroke_poly_line');
  nk_draw_list_stroke_rect := GetProcAddress(aDLLHandle, 'nk_draw_list_stroke_rect');
  nk_draw_list_stroke_triangle := GetProcAddress(aDLLHandle, 'nk_draw_list_stroke_triangle');
  nk_draw_nine_slice := GetProcAddress(aDLLHandle, 'nk_draw_nine_slice');
  nk_draw_text := GetProcAddress(aDLLHandle, 'nk_draw_text');
  nk_edit_buffer := GetProcAddress(aDLLHandle, 'nk_edit_buffer');
  nk_edit_focus := GetProcAddress(aDLLHandle, 'nk_edit_focus');
  nk_edit_string := GetProcAddress(aDLLHandle, 'nk_edit_string');
  nk_edit_string_zero_terminated := GetProcAddress(aDLLHandle, 'nk_edit_string_zero_terminated');
  nk_edit_unfocus := GetProcAddress(aDLLHandle, 'nk_edit_unfocus');
  nk_end := GetProcAddress(aDLLHandle, 'nk_end');
  nk_fill_arc := GetProcAddress(aDLLHandle, 'nk_fill_arc');
  nk_fill_circle := GetProcAddress(aDLLHandle, 'nk_fill_circle');
  nk_fill_polygon := GetProcAddress(aDLLHandle, 'nk_fill_polygon');
  nk_fill_rect := GetProcAddress(aDLLHandle, 'nk_fill_rect');
  nk_fill_rect_multi_color := GetProcAddress(aDLLHandle, 'nk_fill_rect_multi_color');
  nk_fill_triangle := GetProcAddress(aDLLHandle, 'nk_fill_triangle');
  nk_filter_ascii := GetProcAddress(aDLLHandle, 'nk_filter_ascii');
  nk_filter_binary := GetProcAddress(aDLLHandle, 'nk_filter_binary');
  nk_filter_decimal := GetProcAddress(aDLLHandle, 'nk_filter_decimal');
  nk_filter_default := GetProcAddress(aDLLHandle, 'nk_filter_default');
  nk_filter_float := GetProcAddress(aDLLHandle, 'nk_filter_float');
  nk_filter_hex := GetProcAddress(aDLLHandle, 'nk_filter_hex');
  nk_filter_oct := GetProcAddress(aDLLHandle, 'nk_filter_oct');
  nk_font_atlas_add := GetProcAddress(aDLLHandle, 'nk_font_atlas_add');
  nk_font_atlas_add_compressed := GetProcAddress(aDLLHandle, 'nk_font_atlas_add_compressed');
  nk_font_atlas_add_compressed_base85 := GetProcAddress(aDLLHandle, 'nk_font_atlas_add_compressed_base85');
  nk_font_atlas_add_default := GetProcAddress(aDLLHandle, 'nk_font_atlas_add_default');
  nk_font_atlas_add_from_file := GetProcAddress(aDLLHandle, 'nk_font_atlas_add_from_file');
  nk_font_atlas_add_from_memory := GetProcAddress(aDLLHandle, 'nk_font_atlas_add_from_memory');
  nk_font_atlas_bake := GetProcAddress(aDLLHandle, 'nk_font_atlas_bake');
  nk_font_atlas_begin := GetProcAddress(aDLLHandle, 'nk_font_atlas_begin');
  nk_font_atlas_cleanup := GetProcAddress(aDLLHandle, 'nk_font_atlas_cleanup');
  nk_font_atlas_clear := GetProcAddress(aDLLHandle, 'nk_font_atlas_clear');
  nk_font_atlas_end := GetProcAddress(aDLLHandle, 'nk_font_atlas_end');
  nk_font_atlas_init := GetProcAddress(aDLLHandle, 'nk_font_atlas_init');
  nk_font_atlas_init_custom := GetProcAddress(aDLLHandle, 'nk_font_atlas_init_custom');
  nk_font_atlas_init_default := GetProcAddress(aDLLHandle, 'nk_font_atlas_init_default');
  nk_font_chinese_glyph_ranges := GetProcAddress(aDLLHandle, 'nk_font_chinese_glyph_ranges');
  nk_font_config_rtn := GetProcAddress(aDLLHandle, 'nk_font_config');
  nk_font_cyrillic_glyph_ranges := GetProcAddress(aDLLHandle, 'nk_font_cyrillic_glyph_ranges');
  nk_font_default_glyph_ranges := GetProcAddress(aDLLHandle, 'nk_font_default_glyph_ranges');
  nk_font_find_glyph := GetProcAddress(aDLLHandle, 'nk_font_find_glyph');
  nk_font_korean_glyph_ranges := GetProcAddress(aDLLHandle, 'nk_font_korean_glyph_ranges');
  nk_free := GetProcAddress(aDLLHandle, 'nk_free');
  nk_get_null_rect := GetProcAddress(aDLLHandle, 'nk_get_null_rect');
  nk_group_begin := GetProcAddress(aDLLHandle, 'nk_group_begin');
  nk_group_begin_titled := GetProcAddress(aDLLHandle, 'nk_group_begin_titled');
  nk_group_end := GetProcAddress(aDLLHandle, 'nk_group_end');
  nk_group_get_scroll := GetProcAddress(aDLLHandle, 'nk_group_get_scroll');
  nk_group_scrolled_begin := GetProcAddress(aDLLHandle, 'nk_group_scrolled_begin');
  nk_group_scrolled_end := GetProcAddress(aDLLHandle, 'nk_group_scrolled_end');
  nk_group_scrolled_offset_begin := GetProcAddress(aDLLHandle, 'nk_group_scrolled_offset_begin');
  nk_group_set_scroll := GetProcAddress(aDLLHandle, 'nk_group_set_scroll');
  nk_handle_id := GetProcAddress(aDLLHandle, 'nk_handle_id');
  nk_handle_ptr := GetProcAddress(aDLLHandle, 'nk_handle_ptr');
  nk_hsv := GetProcAddress(aDLLHandle, 'nk_hsv');
  nk_hsv_bv := GetProcAddress(aDLLHandle, 'nk_hsv_bv');
  nk_hsv_f := GetProcAddress(aDLLHandle, 'nk_hsv_f');
  nk_hsv_fv := GetProcAddress(aDLLHandle, 'nk_hsv_fv');
  nk_hsv_iv := GetProcAddress(aDLLHandle, 'nk_hsv_iv');
  nk_hsva := GetProcAddress(aDLLHandle, 'nk_hsva');
  nk_hsva_bv := GetProcAddress(aDLLHandle, 'nk_hsva_bv');
  nk_hsva_colorf := GetProcAddress(aDLLHandle, 'nk_hsva_colorf');
  nk_hsva_colorfv := GetProcAddress(aDLLHandle, 'nk_hsva_colorfv');
  nk_hsva_f := GetProcAddress(aDLLHandle, 'nk_hsva_f');
  nk_hsva_fv := GetProcAddress(aDLLHandle, 'nk_hsva_fv');
  nk_hsva_iv := GetProcAddress(aDLLHandle, 'nk_hsva_iv');
  nk_image_color := GetProcAddress(aDLLHandle, 'nk_image_color');
  nk_image_handle := GetProcAddress(aDLLHandle, 'nk_image_handle');
  nk_image_id := GetProcAddress(aDLLHandle, 'nk_image_id');
  nk_image_is_subimage := GetProcAddress(aDLLHandle, 'nk_image_is_subimage');
  nk_image_ptr := GetProcAddress(aDLLHandle, 'nk_image_ptr');
  nk_image_rtn := GetProcAddress(aDLLHandle, 'nk_image');
  nk_init := GetProcAddress(aDLLHandle, 'nk_init');
  nk_init_custom := GetProcAddress(aDLLHandle, 'nk_init_custom');
  nk_init_default := GetProcAddress(aDLLHandle, 'nk_init_default');
  nk_init_fixed := GetProcAddress(aDLLHandle, 'nk_init_fixed');
  nk_input_any_mouse_click_in_rect := GetProcAddress(aDLLHandle, 'nk_input_any_mouse_click_in_rect');
  nk_input_begin := GetProcAddress(aDLLHandle, 'nk_input_begin');
  nk_input_button := GetProcAddress(aDLLHandle, 'nk_input_button');
  nk_input_char := GetProcAddress(aDLLHandle, 'nk_input_char');
  nk_input_end := GetProcAddress(aDLLHandle, 'nk_input_end');
  nk_input_glyph := GetProcAddress(aDLLHandle, 'nk_input_glyph');
  nk_input_has_mouse_click := GetProcAddress(aDLLHandle, 'nk_input_has_mouse_click');
  nk_input_has_mouse_click_down_in_rect := GetProcAddress(aDLLHandle, 'nk_input_has_mouse_click_down_in_rect');
  nk_input_has_mouse_click_in_button_rect := GetProcAddress(aDLLHandle, 'nk_input_has_mouse_click_in_button_rect');
  nk_input_has_mouse_click_in_rect := GetProcAddress(aDLLHandle, 'nk_input_has_mouse_click_in_rect');
  nk_input_is_key_down := GetProcAddress(aDLLHandle, 'nk_input_is_key_down');
  nk_input_is_key_pressed := GetProcAddress(aDLLHandle, 'nk_input_is_key_pressed');
  nk_input_is_key_released := GetProcAddress(aDLLHandle, 'nk_input_is_key_released');
  nk_input_is_mouse_click_down_in_rect := GetProcAddress(aDLLHandle, 'nk_input_is_mouse_click_down_in_rect');
  nk_input_is_mouse_click_in_rect := GetProcAddress(aDLLHandle, 'nk_input_is_mouse_click_in_rect');
  nk_input_is_mouse_down := GetProcAddress(aDLLHandle, 'nk_input_is_mouse_down');
  nk_input_is_mouse_hovering_rect := GetProcAddress(aDLLHandle, 'nk_input_is_mouse_hovering_rect');
  nk_input_is_mouse_pressed := GetProcAddress(aDLLHandle, 'nk_input_is_mouse_pressed');
  nk_input_is_mouse_prev_hovering_rect := GetProcAddress(aDLLHandle, 'nk_input_is_mouse_prev_hovering_rect');
  nk_input_is_mouse_released := GetProcAddress(aDLLHandle, 'nk_input_is_mouse_released');
  nk_input_key := GetProcAddress(aDLLHandle, 'nk_input_key');
  nk_input_motion := GetProcAddress(aDLLHandle, 'nk_input_motion');
  nk_input_mouse_clicked := GetProcAddress(aDLLHandle, 'nk_input_mouse_clicked');
  nk_input_scroll := GetProcAddress(aDLLHandle, 'nk_input_scroll');
  nk_input_unicode := GetProcAddress(aDLLHandle, 'nk_input_unicode');
  nk_item_is_any_active := GetProcAddress(aDLLHandle, 'nk_item_is_any_active');
  nk_label := GetProcAddress(aDLLHandle, 'nk_label');
  nk_label_colored := GetProcAddress(aDLLHandle, 'nk_label_colored');
  nk_label_colored_wrap := GetProcAddress(aDLLHandle, 'nk_label_colored_wrap');
  nk_label_wrap := GetProcAddress(aDLLHandle, 'nk_label_wrap');
  nk_labelf := GetProcAddress(aDLLHandle, 'nk_labelf');
  nk_labelf_colored := GetProcAddress(aDLLHandle, 'nk_labelf_colored');
  nk_labelf_colored_wrap := GetProcAddress(aDLLHandle, 'nk_labelf_colored_wrap');
  nk_labelf_wrap := GetProcAddress(aDLLHandle, 'nk_labelf_wrap');
  nk_labelfv := GetProcAddress(aDLLHandle, 'nk_labelfv');
  nk_labelfv_colored := GetProcAddress(aDLLHandle, 'nk_labelfv_colored');
  nk_labelfv_colored_wrap := GetProcAddress(aDLLHandle, 'nk_labelfv_colored_wrap');
  nk_labelfv_wrap := GetProcAddress(aDLLHandle, 'nk_labelfv_wrap');
  nk_layout_ratio_from_pixel := GetProcAddress(aDLLHandle, 'nk_layout_ratio_from_pixel');
  nk_layout_reset_min_row_height := GetProcAddress(aDLLHandle, 'nk_layout_reset_min_row_height');
  nk_layout_row := GetProcAddress(aDLLHandle, 'nk_layout_row');
  nk_layout_row_begin := GetProcAddress(aDLLHandle, 'nk_layout_row_begin');
  nk_layout_row_dynamic := GetProcAddress(aDLLHandle, 'nk_layout_row_dynamic');
  nk_layout_row_end := GetProcAddress(aDLLHandle, 'nk_layout_row_end');
  nk_layout_row_push := GetProcAddress(aDLLHandle, 'nk_layout_row_push');
  nk_layout_row_static := GetProcAddress(aDLLHandle, 'nk_layout_row_static');
  nk_layout_row_template_begin := GetProcAddress(aDLLHandle, 'nk_layout_row_template_begin');
  nk_layout_row_template_end := GetProcAddress(aDLLHandle, 'nk_layout_row_template_end');
  nk_layout_row_template_push_dynamic := GetProcAddress(aDLLHandle, 'nk_layout_row_template_push_dynamic');
  nk_layout_row_template_push_static := GetProcAddress(aDLLHandle, 'nk_layout_row_template_push_static');
  nk_layout_row_template_push_variable := GetProcAddress(aDLLHandle, 'nk_layout_row_template_push_variable');
  nk_layout_set_min_row_height := GetProcAddress(aDLLHandle, 'nk_layout_set_min_row_height');
  nk_layout_space_begin := GetProcAddress(aDLLHandle, 'nk_layout_space_begin');
  nk_layout_space_bounds := GetProcAddress(aDLLHandle, 'nk_layout_space_bounds');
  nk_layout_space_end := GetProcAddress(aDLLHandle, 'nk_layout_space_end');
  nk_layout_space_push := GetProcAddress(aDLLHandle, 'nk_layout_space_push');
  nk_layout_space_rect_to_local := GetProcAddress(aDLLHandle, 'nk_layout_space_rect_to_local');
  nk_layout_space_rect_to_screen := GetProcAddress(aDLLHandle, 'nk_layout_space_rect_to_screen');
  nk_layout_space_to_local := GetProcAddress(aDLLHandle, 'nk_layout_space_to_local');
  nk_layout_space_to_screen := GetProcAddress(aDLLHandle, 'nk_layout_space_to_screen');
  nk_layout_widget_bounds := GetProcAddress(aDLLHandle, 'nk_layout_widget_bounds');
  nk_list_view_begin := GetProcAddress(aDLLHandle, 'nk_list_view_begin');
  nk_list_view_end := GetProcAddress(aDLLHandle, 'nk_list_view_end');
  nk_menu_begin_image := GetProcAddress(aDLLHandle, 'nk_menu_begin_image');
  nk_menu_begin_image_label := GetProcAddress(aDLLHandle, 'nk_menu_begin_image_label');
  nk_menu_begin_image_text := GetProcAddress(aDLLHandle, 'nk_menu_begin_image_text');
  nk_menu_begin_label := GetProcAddress(aDLLHandle, 'nk_menu_begin_label');
  nk_menu_begin_symbol := GetProcAddress(aDLLHandle, 'nk_menu_begin_symbol');
  nk_menu_begin_symbol_label := GetProcAddress(aDLLHandle, 'nk_menu_begin_symbol_label');
  nk_menu_begin_symbol_text := GetProcAddress(aDLLHandle, 'nk_menu_begin_symbol_text');
  nk_menu_begin_text := GetProcAddress(aDLLHandle, 'nk_menu_begin_text');
  nk_menu_close := GetProcAddress(aDLLHandle, 'nk_menu_close');
  nk_menu_end := GetProcAddress(aDLLHandle, 'nk_menu_end');
  nk_menu_item_image_label := GetProcAddress(aDLLHandle, 'nk_menu_item_image_label');
  nk_menu_item_image_text := GetProcAddress(aDLLHandle, 'nk_menu_item_image_text');
  nk_menu_item_label := GetProcAddress(aDLLHandle, 'nk_menu_item_label');
  nk_menu_item_symbol_label := GetProcAddress(aDLLHandle, 'nk_menu_item_symbol_label');
  nk_menu_item_symbol_text := GetProcAddress(aDLLHandle, 'nk_menu_item_symbol_text');
  nk_menu_item_text := GetProcAddress(aDLLHandle, 'nk_menu_item_text');
  nk_menubar_begin := GetProcAddress(aDLLHandle, 'nk_menubar_begin');
  nk_menubar_end := GetProcAddress(aDLLHandle, 'nk_menubar_end');
  nk_murmur_hash := GetProcAddress(aDLLHandle, 'nk_murmur_hash');
  nk_nine_slice_handle := GetProcAddress(aDLLHandle, 'nk_nine_slice_handle');
  nk_nine_slice_id := GetProcAddress(aDLLHandle, 'nk_nine_slice_id');
  nk_nine_slice_is_sub9slice := GetProcAddress(aDLLHandle, 'nk_nine_slice_is_sub9slice');
  nk_nine_slice_ptr := GetProcAddress(aDLLHandle, 'nk_nine_slice_ptr');
  nk_option_label := GetProcAddress(aDLLHandle, 'nk_option_label');
  nk_option_text := GetProcAddress(aDLLHandle, 'nk_option_text');
  nk_plot := GetProcAddress(aDLLHandle, 'nk_plot');
  nk_plot_function := GetProcAddress(aDLLHandle, 'nk_plot_function');
  nk_popup_begin := GetProcAddress(aDLLHandle, 'nk_popup_begin');
  nk_popup_close := GetProcAddress(aDLLHandle, 'nk_popup_close');
  nk_popup_end := GetProcAddress(aDLLHandle, 'nk_popup_end');
  nk_popup_get_scroll := GetProcAddress(aDLLHandle, 'nk_popup_get_scroll');
  nk_popup_set_scroll := GetProcAddress(aDLLHandle, 'nk_popup_set_scroll');
  nk_prog := GetProcAddress(aDLLHandle, 'nk_prog');
  nk_progress := GetProcAddress(aDLLHandle, 'nk_progress');
  nk_property_double := GetProcAddress(aDLLHandle, 'nk_property_double');
  nk_property_float := GetProcAddress(aDLLHandle, 'nk_property_float');
  nk_property_int := GetProcAddress(aDLLHandle, 'nk_property_int');
  nk_propertyd := GetProcAddress(aDLLHandle, 'nk_propertyd');
  nk_propertyf := GetProcAddress(aDLLHandle, 'nk_propertyf');
  nk_propertyi := GetProcAddress(aDLLHandle, 'nk_propertyi');
  nk_push_custom := GetProcAddress(aDLLHandle, 'nk_push_custom');
  nk_push_scissor := GetProcAddress(aDLLHandle, 'nk_push_scissor');
  nk_radio_label := GetProcAddress(aDLLHandle, 'nk_radio_label');
  nk_radio_text := GetProcAddress(aDLLHandle, 'nk_radio_text');
  nk_rect_pos := GetProcAddress(aDLLHandle, 'nk_rect_pos');
  nk_rect_rtn := GetProcAddress(aDLLHandle, 'nk_rect');
  nk_rect_size := GetProcAddress(aDLLHandle, 'nk_rect_size');
  nk_recta := GetProcAddress(aDLLHandle, 'nk_recta');
  nk_recti_rtn := GetProcAddress(aDLLHandle, 'nk_recti');
  nk_rectiv := GetProcAddress(aDLLHandle, 'nk_rectiv');
  nk_rectv := GetProcAddress(aDLLHandle, 'nk_rectv');
  nk_rgb_bv := GetProcAddress(aDLLHandle, 'nk_rgb_bv');
  nk_rgb_cf := GetProcAddress(aDLLHandle, 'nk_rgb_cf');
  nk_rgb_f := GetProcAddress(aDLLHandle, 'nk_rgb_f');
  nk_rgb_fv := GetProcAddress(aDLLHandle, 'nk_rgb_fv');
  nk_rgb_hex := GetProcAddress(aDLLHandle, 'nk_rgb_hex');
  nk_rgb_iv := GetProcAddress(aDLLHandle, 'nk_rgb_iv');
  nk_rgb_rtn := GetProcAddress(aDLLHandle, 'nk_rgb');
  nk_rgba_bv := GetProcAddress(aDLLHandle, 'nk_rgba_bv');
  nk_rgba_cf := GetProcAddress(aDLLHandle, 'nk_rgba_cf');
  nk_rgba_f := GetProcAddress(aDLLHandle, 'nk_rgba_f');
  nk_rgba_fv := GetProcAddress(aDLLHandle, 'nk_rgba_fv');
  nk_rgba_hex := GetProcAddress(aDLLHandle, 'nk_rgba_hex');
  nk_rgba_iv := GetProcAddress(aDLLHandle, 'nk_rgba_iv');
  nk_rgba_rtn := GetProcAddress(aDLLHandle, 'nk_rgba');
  nk_rgba_u32 := GetProcAddress(aDLLHandle, 'nk_rgba_u32');
  nk_sdl_font_stash_begin := GetProcAddress(aDLLHandle, 'nk_sdl_font_stash_begin');
  nk_sdl_font_stash_end := GetProcAddress(aDLLHandle, 'nk_sdl_font_stash_end');
  nk_sdl_handle_event := GetProcAddress(aDLLHandle, 'nk_sdl_handle_event');
  nk_sdl_init := GetProcAddress(aDLLHandle, 'nk_sdl_init');
  nk_sdl_render := GetProcAddress(aDLLHandle, 'nk_sdl_render');
  nk_sdl_shutdown := GetProcAddress(aDLLHandle, 'nk_sdl_shutdown');
  nk_select_image_label := GetProcAddress(aDLLHandle, 'nk_select_image_label');
  nk_select_image_text := GetProcAddress(aDLLHandle, 'nk_select_image_text');
  nk_select_label := GetProcAddress(aDLLHandle, 'nk_select_label');
  nk_select_symbol_label := GetProcAddress(aDLLHandle, 'nk_select_symbol_label');
  nk_select_symbol_text := GetProcAddress(aDLLHandle, 'nk_select_symbol_text');
  nk_select_text := GetProcAddress(aDLLHandle, 'nk_select_text');
  nk_selectable_image_label := GetProcAddress(aDLLHandle, 'nk_selectable_image_label');
  nk_selectable_image_text := GetProcAddress(aDLLHandle, 'nk_selectable_image_text');
  nk_selectable_label := GetProcAddress(aDLLHandle, 'nk_selectable_label');
  nk_selectable_symbol_label := GetProcAddress(aDLLHandle, 'nk_selectable_symbol_label');
  nk_selectable_symbol_text := GetProcAddress(aDLLHandle, 'nk_selectable_symbol_text');
  nk_selectable_text := GetProcAddress(aDLLHandle, 'nk_selectable_text');
  nk_slide_float := GetProcAddress(aDLLHandle, 'nk_slide_float');
  nk_slide_int := GetProcAddress(aDLLHandle, 'nk_slide_int');
  nk_slider_float := GetProcAddress(aDLLHandle, 'nk_slider_float');
  nk_slider_int := GetProcAddress(aDLLHandle, 'nk_slider_int');
  nk_spacer := GetProcAddress(aDLLHandle, 'nk_spacer');
  nk_spacing := GetProcAddress(aDLLHandle, 'nk_spacing');
  nk_str_append_str_char := GetProcAddress(aDLLHandle, 'nk_str_append_str_char');
  nk_str_append_str_runes := GetProcAddress(aDLLHandle, 'nk_str_append_str_runes');
  nk_str_append_str_utf8 := GetProcAddress(aDLLHandle, 'nk_str_append_str_utf8');
  nk_str_append_text_char := GetProcAddress(aDLLHandle, 'nk_str_append_text_char');
  nk_str_append_text_runes := GetProcAddress(aDLLHandle, 'nk_str_append_text_runes');
  nk_str_append_text_utf8 := GetProcAddress(aDLLHandle, 'nk_str_append_text_utf8');
  nk_str_at_char := GetProcAddress(aDLLHandle, 'nk_str_at_char');
  nk_str_at_char_const := GetProcAddress(aDLLHandle, 'nk_str_at_char_const');
  nk_str_at_const := GetProcAddress(aDLLHandle, 'nk_str_at_const');
  nk_str_at_rune := GetProcAddress(aDLLHandle, 'nk_str_at_rune');
  nk_str_clear := GetProcAddress(aDLLHandle, 'nk_str_clear');
  nk_str_delete_chars := GetProcAddress(aDLLHandle, 'nk_str_delete_chars');
  nk_str_delete_runes := GetProcAddress(aDLLHandle, 'nk_str_delete_runes');
  nk_str_free := GetProcAddress(aDLLHandle, 'nk_str_free');
  nk_str_get := GetProcAddress(aDLLHandle, 'nk_str_get');
  nk_str_get_const := GetProcAddress(aDLLHandle, 'nk_str_get_const');
  nk_str_init := GetProcAddress(aDLLHandle, 'nk_str_init');
  nk_str_init_default := GetProcAddress(aDLLHandle, 'nk_str_init_default');
  nk_str_init_fixed := GetProcAddress(aDLLHandle, 'nk_str_init_fixed');
  nk_str_insert_at_char := GetProcAddress(aDLLHandle, 'nk_str_insert_at_char');
  nk_str_insert_at_rune := GetProcAddress(aDLLHandle, 'nk_str_insert_at_rune');
  nk_str_insert_str_char := GetProcAddress(aDLLHandle, 'nk_str_insert_str_char');
  nk_str_insert_str_runes := GetProcAddress(aDLLHandle, 'nk_str_insert_str_runes');
  nk_str_insert_str_utf8 := GetProcAddress(aDLLHandle, 'nk_str_insert_str_utf8');
  nk_str_insert_text_char := GetProcAddress(aDLLHandle, 'nk_str_insert_text_char');
  nk_str_insert_text_runes := GetProcAddress(aDLLHandle, 'nk_str_insert_text_runes');
  nk_str_insert_text_utf8 := GetProcAddress(aDLLHandle, 'nk_str_insert_text_utf8');
  nk_str_len := GetProcAddress(aDLLHandle, 'nk_str_len');
  nk_str_len_char := GetProcAddress(aDLLHandle, 'nk_str_len_char');
  nk_str_remove_chars := GetProcAddress(aDLLHandle, 'nk_str_remove_chars');
  nk_str_remove_runes := GetProcAddress(aDLLHandle, 'nk_str_remove_runes');
  nk_str_rune_at := GetProcAddress(aDLLHandle, 'nk_str_rune_at');
  nk_strfilter := GetProcAddress(aDLLHandle, 'nk_strfilter');
  nk_stricmp := GetProcAddress(aDLLHandle, 'nk_stricmp');
  nk_stricmpn := GetProcAddress(aDLLHandle, 'nk_stricmpn');
  nk_strlen := GetProcAddress(aDLLHandle, 'nk_strlen');
  nk_strmatch_fuzzy_string := GetProcAddress(aDLLHandle, 'nk_strmatch_fuzzy_string');
  nk_strmatch_fuzzy_text := GetProcAddress(aDLLHandle, 'nk_strmatch_fuzzy_text');
  nk_stroke_arc := GetProcAddress(aDLLHandle, 'nk_stroke_arc');
  nk_stroke_circle := GetProcAddress(aDLLHandle, 'nk_stroke_circle');
  nk_stroke_curve := GetProcAddress(aDLLHandle, 'nk_stroke_curve');
  nk_stroke_line := GetProcAddress(aDLLHandle, 'nk_stroke_line');
  nk_stroke_polygon := GetProcAddress(aDLLHandle, 'nk_stroke_polygon');
  nk_stroke_polyline := GetProcAddress(aDLLHandle, 'nk_stroke_polyline');
  nk_stroke_rect := GetProcAddress(aDLLHandle, 'nk_stroke_rect');
  nk_stroke_triangle := GetProcAddress(aDLLHandle, 'nk_stroke_triangle');
  nk_strtod := GetProcAddress(aDLLHandle, 'nk_strtod');
  nk_strtof := GetProcAddress(aDLLHandle, 'nk_strtof');
  nk_strtoi := GetProcAddress(aDLLHandle, 'nk_strtoi');
  nk_style_default := GetProcAddress(aDLLHandle, 'nk_style_default');
  nk_style_from_table := GetProcAddress(aDLLHandle, 'nk_style_from_table');
  nk_style_get_color_by_name := GetProcAddress(aDLLHandle, 'nk_style_get_color_by_name');
  nk_style_hide_cursor := GetProcAddress(aDLLHandle, 'nk_style_hide_cursor');
  nk_style_item_color_rtn := GetProcAddress(aDLLHandle, 'nk_style_item_color');
  nk_style_item_hide := GetProcAddress(aDLLHandle, 'nk_style_item_hide');
  nk_style_item_image_rtn := GetProcAddress(aDLLHandle, 'nk_style_item_image');
  nk_style_item_nine_slice_rtn := GetProcAddress(aDLLHandle, 'nk_style_item_nine_slice');
  nk_style_load_all_cursors := GetProcAddress(aDLLHandle, 'nk_style_load_all_cursors');
  nk_style_load_cursor := GetProcAddress(aDLLHandle, 'nk_style_load_cursor');
  nk_style_pop_color := GetProcAddress(aDLLHandle, 'nk_style_pop_color');
  nk_style_pop_flags := GetProcAddress(aDLLHandle, 'nk_style_pop_flags');
  nk_style_pop_float := GetProcAddress(aDLLHandle, 'nk_style_pop_float');
  nk_style_pop_font := GetProcAddress(aDLLHandle, 'nk_style_pop_font');
  nk_style_pop_style_item := GetProcAddress(aDLLHandle, 'nk_style_pop_style_item');
  nk_style_pop_vec2 := GetProcAddress(aDLLHandle, 'nk_style_pop_vec2');
  nk_style_push_color := GetProcAddress(aDLLHandle, 'nk_style_push_color');
  nk_style_push_flags := GetProcAddress(aDLLHandle, 'nk_style_push_flags');
  nk_style_push_float := GetProcAddress(aDLLHandle, 'nk_style_push_float');
  nk_style_push_font := GetProcAddress(aDLLHandle, 'nk_style_push_font');
  nk_style_push_style_item := GetProcAddress(aDLLHandle, 'nk_style_push_style_item');
  nk_style_push_vec2 := GetProcAddress(aDLLHandle, 'nk_style_push_vec2');
  nk_style_set_cursor := GetProcAddress(aDLLHandle, 'nk_style_set_cursor');
  nk_style_set_font := GetProcAddress(aDLLHandle, 'nk_style_set_font');
  nk_style_show_cursor := GetProcAddress(aDLLHandle, 'nk_style_show_cursor');
  nk_sub9slice_handle := GetProcAddress(aDLLHandle, 'nk_sub9slice_handle');
  nk_sub9slice_id := GetProcAddress(aDLLHandle, 'nk_sub9slice_id');
  nk_sub9slice_ptr := GetProcAddress(aDLLHandle, 'nk_sub9slice_ptr');
  nk_subimage_handle := GetProcAddress(aDLLHandle, 'nk_subimage_handle');
  nk_subimage_id := GetProcAddress(aDLLHandle, 'nk_subimage_id');
  nk_subimage_ptr := GetProcAddress(aDLLHandle, 'nk_subimage_ptr');
  nk_text := GetProcAddress(aDLLHandle, 'nk_text');
  nk_text_colored := GetProcAddress(aDLLHandle, 'nk_text_colored');
  nk_text_wrap := GetProcAddress(aDLLHandle, 'nk_text_wrap');
  nk_text_wrap_colored := GetProcAddress(aDLLHandle, 'nk_text_wrap_colored');
  nk_textedit_cut := GetProcAddress(aDLLHandle, 'nk_textedit_cut');
  nk_textedit_delete := GetProcAddress(aDLLHandle, 'nk_textedit_delete');
  nk_textedit_delete_selection := GetProcAddress(aDLLHandle, 'nk_textedit_delete_selection');
  nk_textedit_free := GetProcAddress(aDLLHandle, 'nk_textedit_free');
  nk_textedit_init := GetProcAddress(aDLLHandle, 'nk_textedit_init');
  nk_textedit_init_default := GetProcAddress(aDLLHandle, 'nk_textedit_init_default');
  nk_textedit_init_fixed := GetProcAddress(aDLLHandle, 'nk_textedit_init_fixed');
  nk_textedit_paste := GetProcAddress(aDLLHandle, 'nk_textedit_paste');
  nk_textedit_redo := GetProcAddress(aDLLHandle, 'nk_textedit_redo');
  nk_textedit_select_all := GetProcAddress(aDLLHandle, 'nk_textedit_select_all');
  nk_textedit_text := GetProcAddress(aDLLHandle, 'nk_textedit_text');
  nk_textedit_undo := GetProcAddress(aDLLHandle, 'nk_textedit_undo');
  nk_tooltip := GetProcAddress(aDLLHandle, 'nk_tooltip');
  nk_tooltip_begin := GetProcAddress(aDLLHandle, 'nk_tooltip_begin');
  nk_tooltip_end := GetProcAddress(aDLLHandle, 'nk_tooltip_end');
  nk_tooltipf := GetProcAddress(aDLLHandle, 'nk_tooltipf');
  nk_tooltipfv := GetProcAddress(aDLLHandle, 'nk_tooltipfv');
  nk_tree_element_image_push_hashed := GetProcAddress(aDLLHandle, 'nk_tree_element_image_push_hashed');
  nk_tree_element_pop := GetProcAddress(aDLLHandle, 'nk_tree_element_pop');
  nk_tree_element_push_hashed := GetProcAddress(aDLLHandle, 'nk_tree_element_push_hashed');
  nk_tree_image_push_hashed := GetProcAddress(aDLLHandle, 'nk_tree_image_push_hashed');
  nk_tree_pop := GetProcAddress(aDLLHandle, 'nk_tree_pop');
  nk_tree_push_hashed := GetProcAddress(aDLLHandle, 'nk_tree_push_hashed');
  nk_tree_state_image_push := GetProcAddress(aDLLHandle, 'nk_tree_state_image_push');
  nk_tree_state_pop := GetProcAddress(aDLLHandle, 'nk_tree_state_pop');
  nk_tree_state_push := GetProcAddress(aDLLHandle, 'nk_tree_state_push');
  nk_triangle_from_direction := GetProcAddress(aDLLHandle, 'nk_triangle_from_direction');
  nk_utf_at := GetProcAddress(aDLLHandle, 'nk_utf_at');
  nk_utf_decode := GetProcAddress(aDLLHandle, 'nk_utf_decode');
  nk_utf_encode := GetProcAddress(aDLLHandle, 'nk_utf_encode');
  nk_utf_len := GetProcAddress(aDLLHandle, 'nk_utf_len');
  nk_value_bool := GetProcAddress(aDLLHandle, 'nk_value_bool');
  nk_value_color_byte := GetProcAddress(aDLLHandle, 'nk_value_color_byte');
  nk_value_color_float := GetProcAddress(aDLLHandle, 'nk_value_color_float');
  nk_value_color_hex := GetProcAddress(aDLLHandle, 'nk_value_color_hex');
  nk_value_float := GetProcAddress(aDLLHandle, 'nk_value_float');
  nk_value_int := GetProcAddress(aDLLHandle, 'nk_value_int');
  nk_value_uint := GetProcAddress(aDLLHandle, 'nk_value_uint');
  nk_vec2_rtn := GetProcAddress(aDLLHandle, 'nk_vec2');
  nk_vec2i_rtn := GetProcAddress(aDLLHandle, 'nk_vec2i');
  nk_vec2iv := GetProcAddress(aDLLHandle, 'nk_vec2iv');
  nk_vec2v := GetProcAddress(aDLLHandle, 'nk_vec2v');
  nk_widget := GetProcAddress(aDLLHandle, 'nk_widget');
  nk_widget_bounds := GetProcAddress(aDLLHandle, 'nk_widget_bounds');
  nk_widget_fitting := GetProcAddress(aDLLHandle, 'nk_widget_fitting');
  nk_widget_has_mouse_click_down := GetProcAddress(aDLLHandle, 'nk_widget_has_mouse_click_down');
  nk_widget_height := GetProcAddress(aDLLHandle, 'nk_widget_height');
  nk_widget_is_hovered := GetProcAddress(aDLLHandle, 'nk_widget_is_hovered');
  nk_widget_is_mouse_clicked := GetProcAddress(aDLLHandle, 'nk_widget_is_mouse_clicked');
  nk_widget_position := GetProcAddress(aDLLHandle, 'nk_widget_position');
  nk_widget_size := GetProcAddress(aDLLHandle, 'nk_widget_size');
  nk_widget_width := GetProcAddress(aDLLHandle, 'nk_widget_width');
  nk_window_close := GetProcAddress(aDLLHandle, 'nk_window_close');
  nk_window_collapse := GetProcAddress(aDLLHandle, 'nk_window_collapse');
  nk_window_collapse_if := GetProcAddress(aDLLHandle, 'nk_window_collapse_if');
  nk_window_find := GetProcAddress(aDLLHandle, 'nk_window_find');
  nk_window_get_bounds := GetProcAddress(aDLLHandle, 'nk_window_get_bounds');
  nk_window_get_canvas := GetProcAddress(aDLLHandle, 'nk_window_get_canvas');
  nk_window_get_content_region := GetProcAddress(aDLLHandle, 'nk_window_get_content_region');
  nk_window_get_content_region_max := GetProcAddress(aDLLHandle, 'nk_window_get_content_region_max');
  nk_window_get_content_region_min := GetProcAddress(aDLLHandle, 'nk_window_get_content_region_min');
  nk_window_get_content_region_size := GetProcAddress(aDLLHandle, 'nk_window_get_content_region_size');
  nk_window_get_height := GetProcAddress(aDLLHandle, 'nk_window_get_height');
  nk_window_get_panel := GetProcAddress(aDLLHandle, 'nk_window_get_panel');
  nk_window_get_position := GetProcAddress(aDLLHandle, 'nk_window_get_position');
  nk_window_get_scroll := GetProcAddress(aDLLHandle, 'nk_window_get_scroll');
  nk_window_get_size := GetProcAddress(aDLLHandle, 'nk_window_get_size');
  nk_window_get_width := GetProcAddress(aDLLHandle, 'nk_window_get_width');
  nk_window_has_focus := GetProcAddress(aDLLHandle, 'nk_window_has_focus');
  nk_window_is_active := GetProcAddress(aDLLHandle, 'nk_window_is_active');
  nk_window_is_any_hovered := GetProcAddress(aDLLHandle, 'nk_window_is_any_hovered');
  nk_window_is_closed := GetProcAddress(aDLLHandle, 'nk_window_is_closed');
  nk_window_is_collapsed := GetProcAddress(aDLLHandle, 'nk_window_is_collapsed');
  nk_window_is_hidden := GetProcAddress(aDLLHandle, 'nk_window_is_hidden');
  nk_window_is_hovered := GetProcAddress(aDLLHandle, 'nk_window_is_hovered');
  nk_window_set_bounds := GetProcAddress(aDLLHandle, 'nk_window_set_bounds');
  nk_window_set_focus := GetProcAddress(aDLLHandle, 'nk_window_set_focus');
  nk_window_set_position := GetProcAddress(aDLLHandle, 'nk_window_set_position');
  nk_window_set_scroll := GetProcAddress(aDLLHandle, 'nk_window_set_scroll');
  nk_window_set_size := GetProcAddress(aDLLHandle, 'nk_window_set_size');
  nk_window_show := GetProcAddress(aDLLHandle, 'nk_window_show');
  nk_window_show_if := GetProcAddress(aDLLHandle, 'nk_window_show_if');
  PHYSFS_deinit := GetProcAddress(aDLLHandle, 'PHYSFS_deinit');
  PHYSFS_getWriteDir := GetProcAddress(aDLLHandle, 'PHYSFS_getWriteDir');
  PHYSFS_init := GetProcAddress(aDLLHandle, 'PHYSFS_init');
  PHYSFS_mount := GetProcAddress(aDLLHandle, 'PHYSFS_mount');
  PHYSFS_setWriteDir := GetProcAddress(aDLLHandle, 'PHYSFS_setWriteDir');
  PHYSFS_unmount := GetProcAddress(aDLLHandle, 'PHYSFS_unmount');
  PHYSFSRWOPS_openAppend := GetProcAddress(aDLLHandle, 'PHYSFSRWOPS_openAppend');
  PHYSFSRWOPS_openRead := GetProcAddress(aDLLHandle, 'PHYSFSRWOPS_openRead');
  PHYSFSRWOPS_openWrite := GetProcAddress(aDLLHandle, 'PHYSFSRWOPS_openWrite');
  pieColor := GetProcAddress(aDLLHandle, 'pieColor');
  pieRGBA := GetProcAddress(aDLLHandle, 'pieRGBA');
  pixelColor := GetProcAddress(aDLLHandle, 'pixelColor');
  pixelRGBA := GetProcAddress(aDLLHandle, 'pixelRGBA');
  plm_audio_create_with_buffer := GetProcAddress(aDLLHandle, 'plm_audio_create_with_buffer');
  plm_audio_decode := GetProcAddress(aDLLHandle, 'plm_audio_decode');
  plm_audio_destroy := GetProcAddress(aDLLHandle, 'plm_audio_destroy');
  plm_audio_get_samplerate := GetProcAddress(aDLLHandle, 'plm_audio_get_samplerate');
  plm_audio_get_time := GetProcAddress(aDLLHandle, 'plm_audio_get_time');
  plm_audio_has_ended := GetProcAddress(aDLLHandle, 'plm_audio_has_ended');
  plm_audio_has_header := GetProcAddress(aDLLHandle, 'plm_audio_has_header');
  plm_audio_rewind := GetProcAddress(aDLLHandle, 'plm_audio_rewind');
  plm_audio_set_time := GetProcAddress(aDLLHandle, 'plm_audio_set_time');
  plm_buffer_create_for_appending := GetProcAddress(aDLLHandle, 'plm_buffer_create_for_appending');
  plm_buffer_create_with_capacity := GetProcAddress(aDLLHandle, 'plm_buffer_create_with_capacity');
  plm_buffer_create_with_file := GetProcAddress(aDLLHandle, 'plm_buffer_create_with_file');
  plm_buffer_create_with_filename := GetProcAddress(aDLLHandle, 'plm_buffer_create_with_filename');
  plm_buffer_create_with_memory := GetProcAddress(aDLLHandle, 'plm_buffer_create_with_memory');
  plm_buffer_destroy := GetProcAddress(aDLLHandle, 'plm_buffer_destroy');
  plm_buffer_get_remaining := GetProcAddress(aDLLHandle, 'plm_buffer_get_remaining');
  plm_buffer_get_size := GetProcAddress(aDLLHandle, 'plm_buffer_get_size');
  plm_buffer_has_ended := GetProcAddress(aDLLHandle, 'plm_buffer_has_ended');
  plm_buffer_rewind := GetProcAddress(aDLLHandle, 'plm_buffer_rewind');
  plm_buffer_set_load_callback := GetProcAddress(aDLLHandle, 'plm_buffer_set_load_callback');
  plm_buffer_signal_end := GetProcAddress(aDLLHandle, 'plm_buffer_signal_end');
  plm_buffer_write := GetProcAddress(aDLLHandle, 'plm_buffer_write');
  plm_create_with_buffer := GetProcAddress(aDLLHandle, 'plm_create_with_buffer');
  plm_create_with_file := GetProcAddress(aDLLHandle, 'plm_create_with_file');
  plm_create_with_filename := GetProcAddress(aDLLHandle, 'plm_create_with_filename');
  plm_create_with_memory := GetProcAddress(aDLLHandle, 'plm_create_with_memory');
  plm_decode := GetProcAddress(aDLLHandle, 'plm_decode');
  plm_decode_audio := GetProcAddress(aDLLHandle, 'plm_decode_audio');
  plm_decode_video := GetProcAddress(aDLLHandle, 'plm_decode_video');
  plm_demux_create := GetProcAddress(aDLLHandle, 'plm_demux_create');
  plm_demux_decode := GetProcAddress(aDLLHandle, 'plm_demux_decode');
  plm_demux_destroy := GetProcAddress(aDLLHandle, 'plm_demux_destroy');
  plm_demux_get_duration := GetProcAddress(aDLLHandle, 'plm_demux_get_duration');
  plm_demux_get_num_audio_streams := GetProcAddress(aDLLHandle, 'plm_demux_get_num_audio_streams');
  plm_demux_get_num_video_streams := GetProcAddress(aDLLHandle, 'plm_demux_get_num_video_streams');
  plm_demux_get_start_time := GetProcAddress(aDLLHandle, 'plm_demux_get_start_time');
  plm_demux_has_ended := GetProcAddress(aDLLHandle, 'plm_demux_has_ended');
  plm_demux_has_headers := GetProcAddress(aDLLHandle, 'plm_demux_has_headers');
  plm_demux_rewind := GetProcAddress(aDLLHandle, 'plm_demux_rewind');
  plm_demux_seek := GetProcAddress(aDLLHandle, 'plm_demux_seek');
  plm_destroy := GetProcAddress(aDLLHandle, 'plm_destroy');
  plm_frame_to_abgr := GetProcAddress(aDLLHandle, 'plm_frame_to_abgr');
  plm_frame_to_argb := GetProcAddress(aDLLHandle, 'plm_frame_to_argb');
  plm_frame_to_bgr := GetProcAddress(aDLLHandle, 'plm_frame_to_bgr');
  plm_frame_to_bgra := GetProcAddress(aDLLHandle, 'plm_frame_to_bgra');
  plm_frame_to_rgb := GetProcAddress(aDLLHandle, 'plm_frame_to_rgb');
  plm_frame_to_rgba := GetProcAddress(aDLLHandle, 'plm_frame_to_rgba');
  plm_get_audio_enabled := GetProcAddress(aDLLHandle, 'plm_get_audio_enabled');
  plm_get_audio_lead_time := GetProcAddress(aDLLHandle, 'plm_get_audio_lead_time');
  plm_get_duration := GetProcAddress(aDLLHandle, 'plm_get_duration');
  plm_get_framerate := GetProcAddress(aDLLHandle, 'plm_get_framerate');
  plm_get_height := GetProcAddress(aDLLHandle, 'plm_get_height');
  plm_get_loop := GetProcAddress(aDLLHandle, 'plm_get_loop');
  plm_get_num_audio_streams := GetProcAddress(aDLLHandle, 'plm_get_num_audio_streams');
  plm_get_num_video_streams := GetProcAddress(aDLLHandle, 'plm_get_num_video_streams');
  plm_get_samplerate := GetProcAddress(aDLLHandle, 'plm_get_samplerate');
  plm_get_time := GetProcAddress(aDLLHandle, 'plm_get_time');
  plm_get_video_enabled := GetProcAddress(aDLLHandle, 'plm_get_video_enabled');
  plm_get_width := GetProcAddress(aDLLHandle, 'plm_get_width');
  plm_has_ended := GetProcAddress(aDLLHandle, 'plm_has_ended');
  plm_has_headers := GetProcAddress(aDLLHandle, 'plm_has_headers');
  plm_rewind := GetProcAddress(aDLLHandle, 'plm_rewind');
  plm_seek := GetProcAddress(aDLLHandle, 'plm_seek');
  plm_seek_frame := GetProcAddress(aDLLHandle, 'plm_seek_frame');
  plm_set_audio_decode_callback := GetProcAddress(aDLLHandle, 'plm_set_audio_decode_callback');
  plm_set_audio_enabled := GetProcAddress(aDLLHandle, 'plm_set_audio_enabled');
  plm_set_audio_lead_time := GetProcAddress(aDLLHandle, 'plm_set_audio_lead_time');
  plm_set_audio_stream := GetProcAddress(aDLLHandle, 'plm_set_audio_stream');
  plm_set_loop := GetProcAddress(aDLLHandle, 'plm_set_loop');
  plm_set_video_decode_callback := GetProcAddress(aDLLHandle, 'plm_set_video_decode_callback');
  plm_set_video_enabled := GetProcAddress(aDLLHandle, 'plm_set_video_enabled');
  plm_video_create_with_buffer := GetProcAddress(aDLLHandle, 'plm_video_create_with_buffer');
  plm_video_decode := GetProcAddress(aDLLHandle, 'plm_video_decode');
  plm_video_destroy := GetProcAddress(aDLLHandle, 'plm_video_destroy');
  plm_video_get_framerate := GetProcAddress(aDLLHandle, 'plm_video_get_framerate');
  plm_video_get_height := GetProcAddress(aDLLHandle, 'plm_video_get_height');
  plm_video_get_time := GetProcAddress(aDLLHandle, 'plm_video_get_time');
  plm_video_get_width := GetProcAddress(aDLLHandle, 'plm_video_get_width');
  plm_video_has_ended := GetProcAddress(aDLLHandle, 'plm_video_has_ended');
  plm_video_has_header := GetProcAddress(aDLLHandle, 'plm_video_has_header');
  plm_video_rewind := GetProcAddress(aDLLHandle, 'plm_video_rewind');
  plm_video_set_no_delay := GetProcAddress(aDLLHandle, 'plm_video_set_no_delay');
  plm_video_set_time := GetProcAddress(aDLLHandle, 'plm_video_set_time');
  polygonColor := GetProcAddress(aDLLHandle, 'polygonColor');
  polygonRGBA := GetProcAddress(aDLLHandle, 'polygonRGBA');
  rectangleColor := GetProcAddress(aDLLHandle, 'rectangleColor');
  rectangleRGBA := GetProcAddress(aDLLHandle, 'rectangleRGBA');
  roundedBoxColor := GetProcAddress(aDLLHandle, 'roundedBoxColor');
  roundedBoxRGBA := GetProcAddress(aDLLHandle, 'roundedBoxRGBA');
  roundedRectangleColor := GetProcAddress(aDLLHandle, 'roundedRectangleColor');
  roundedRectangleRGBA := GetProcAddress(aDLLHandle, 'roundedRectangleRGBA');
  SDL_abs := GetProcAddress(aDLLHandle, 'SDL_abs');
  SDL_acos := GetProcAddress(aDLLHandle, 'SDL_acos');
  SDL_acosf := GetProcAddress(aDLLHandle, 'SDL_acosf');
  SDL_AddEventWatch := GetProcAddress(aDLLHandle, 'SDL_AddEventWatch');
  SDL_AddHintCallback := GetProcAddress(aDLLHandle, 'SDL_AddHintCallback');
  SDL_AddTimer := GetProcAddress(aDLLHandle, 'SDL_AddTimer');
  SDL_AllocFormat := GetProcAddress(aDLLHandle, 'SDL_AllocFormat');
  SDL_AllocPalette := GetProcAddress(aDLLHandle, 'SDL_AllocPalette');
  SDL_AllocRW := GetProcAddress(aDLLHandle, 'SDL_AllocRW');
  SDL_asin := GetProcAddress(aDLLHandle, 'SDL_asin');
  SDL_asinf := GetProcAddress(aDLLHandle, 'SDL_asinf');
  SDL_asprintf := GetProcAddress(aDLLHandle, 'SDL_asprintf');
  SDL_atan := GetProcAddress(aDLLHandle, 'SDL_atan');
  SDL_atan2 := GetProcAddress(aDLLHandle, 'SDL_atan2');
  SDL_atan2f := GetProcAddress(aDLLHandle, 'SDL_atan2f');
  SDL_atanf := GetProcAddress(aDLLHandle, 'SDL_atanf');
  SDL_atof := GetProcAddress(aDLLHandle, 'SDL_atof');
  SDL_atoi := GetProcAddress(aDLLHandle, 'SDL_atoi');
  SDL_AtomicAdd := GetProcAddress(aDLLHandle, 'SDL_AtomicAdd');
  SDL_AtomicCAS := GetProcAddress(aDLLHandle, 'SDL_AtomicCAS');
  SDL_AtomicCASPtr := GetProcAddress(aDLLHandle, 'SDL_AtomicCASPtr');
  SDL_AtomicGet := GetProcAddress(aDLLHandle, 'SDL_AtomicGet');
  SDL_AtomicGetPtr := GetProcAddress(aDLLHandle, 'SDL_AtomicGetPtr');
  SDL_AtomicLock := GetProcAddress(aDLLHandle, 'SDL_AtomicLock');
  SDL_AtomicSet := GetProcAddress(aDLLHandle, 'SDL_AtomicSet');
  SDL_AtomicSetPtr := GetProcAddress(aDLLHandle, 'SDL_AtomicSetPtr');
  SDL_AtomicTryLock := GetProcAddress(aDLLHandle, 'SDL_AtomicTryLock');
  SDL_AtomicUnlock := GetProcAddress(aDLLHandle, 'SDL_AtomicUnlock');
  SDL_AudioInit := GetProcAddress(aDLLHandle, 'SDL_AudioInit');
  SDL_AudioQuit := GetProcAddress(aDLLHandle, 'SDL_AudioQuit');
  SDL_AudioStreamAvailable := GetProcAddress(aDLLHandle, 'SDL_AudioStreamAvailable');
  SDL_AudioStreamClear := GetProcAddress(aDLLHandle, 'SDL_AudioStreamClear');
  SDL_AudioStreamFlush := GetProcAddress(aDLLHandle, 'SDL_AudioStreamFlush');
  SDL_AudioStreamGet := GetProcAddress(aDLLHandle, 'SDL_AudioStreamGet');
  SDL_AudioStreamPut := GetProcAddress(aDLLHandle, 'SDL_AudioStreamPut');
  SDL_bsearch := GetProcAddress(aDLLHandle, 'SDL_bsearch');
  SDL_BuildAudioCVT := GetProcAddress(aDLLHandle, 'SDL_BuildAudioCVT');
  SDL_CalculateGammaRamp := GetProcAddress(aDLLHandle, 'SDL_CalculateGammaRamp');
  SDL_calloc := GetProcAddress(aDLLHandle, 'SDL_calloc');
  SDL_CaptureMouse := GetProcAddress(aDLLHandle, 'SDL_CaptureMouse');
  SDL_ceil := GetProcAddress(aDLLHandle, 'SDL_ceil');
  SDL_ceilf := GetProcAddress(aDLLHandle, 'SDL_ceilf');
  SDL_ClearComposition := GetProcAddress(aDLLHandle, 'SDL_ClearComposition');
  SDL_ClearError := GetProcAddress(aDLLHandle, 'SDL_ClearError');
  SDL_ClearHints := GetProcAddress(aDLLHandle, 'SDL_ClearHints');
  SDL_ClearQueuedAudio := GetProcAddress(aDLLHandle, 'SDL_ClearQueuedAudio');
  SDL_CloseAudio := GetProcAddress(aDLLHandle, 'SDL_CloseAudio');
  SDL_CloseAudioDevice := GetProcAddress(aDLLHandle, 'SDL_CloseAudioDevice');
  SDL_ComposeCustomBlendMode := GetProcAddress(aDLLHandle, 'SDL_ComposeCustomBlendMode');
  SDL_CondBroadcast := GetProcAddress(aDLLHandle, 'SDL_CondBroadcast');
  SDL_CondSignal := GetProcAddress(aDLLHandle, 'SDL_CondSignal');
  SDL_CondWait := GetProcAddress(aDLLHandle, 'SDL_CondWait');
  SDL_CondWaitTimeout := GetProcAddress(aDLLHandle, 'SDL_CondWaitTimeout');
  SDL_ConvertAudio := GetProcAddress(aDLLHandle, 'SDL_ConvertAudio');
  SDL_ConvertPixels := GetProcAddress(aDLLHandle, 'SDL_ConvertPixels');
  SDL_ConvertSurface := GetProcAddress(aDLLHandle, 'SDL_ConvertSurface');
  SDL_ConvertSurfaceFormat := GetProcAddress(aDLLHandle, 'SDL_ConvertSurfaceFormat');
  SDL_copysign := GetProcAddress(aDLLHandle, 'SDL_copysign');
  SDL_copysignf := GetProcAddress(aDLLHandle, 'SDL_copysignf');
  SDL_cos := GetProcAddress(aDLLHandle, 'SDL_cos');
  SDL_cosf := GetProcAddress(aDLLHandle, 'SDL_cosf');
  SDL_crc16 := GetProcAddress(aDLLHandle, 'SDL_crc16');
  SDL_crc32 := GetProcAddress(aDLLHandle, 'SDL_crc32');
  SDL_CreateColorCursor := GetProcAddress(aDLLHandle, 'SDL_CreateColorCursor');
  SDL_CreateCond := GetProcAddress(aDLLHandle, 'SDL_CreateCond');
  SDL_CreateCursor := GetProcAddress(aDLLHandle, 'SDL_CreateCursor');
  SDL_CreateMutex := GetProcAddress(aDLLHandle, 'SDL_CreateMutex');
  SDL_CreateRenderer := GetProcAddress(aDLLHandle, 'SDL_CreateRenderer');
  SDL_CreateRGBSurface := GetProcAddress(aDLLHandle, 'SDL_CreateRGBSurface');
  SDL_CreateRGBSurfaceFrom := GetProcAddress(aDLLHandle, 'SDL_CreateRGBSurfaceFrom');
  SDL_CreateRGBSurfaceWithFormat := GetProcAddress(aDLLHandle, 'SDL_CreateRGBSurfaceWithFormat');
  SDL_CreateRGBSurfaceWithFormatFrom := GetProcAddress(aDLLHandle, 'SDL_CreateRGBSurfaceWithFormatFrom');
  SDL_CreateSemaphore := GetProcAddress(aDLLHandle, 'SDL_CreateSemaphore');
  SDL_CreateShapedWindow := GetProcAddress(aDLLHandle, 'SDL_CreateShapedWindow');
  SDL_CreateSoftwareRenderer := GetProcAddress(aDLLHandle, 'SDL_CreateSoftwareRenderer');
  SDL_CreateSystemCursor := GetProcAddress(aDLLHandle, 'SDL_CreateSystemCursor');
  SDL_CreateTexture := GetProcAddress(aDLLHandle, 'SDL_CreateTexture');
  SDL_CreateTextureFromSurface := GetProcAddress(aDLLHandle, 'SDL_CreateTextureFromSurface');
  SDL_CreateThread := GetProcAddress(aDLLHandle, 'SDL_CreateThread');
  SDL_CreateThreadWithStackSize := GetProcAddress(aDLLHandle, 'SDL_CreateThreadWithStackSize');
  SDL_CreateWindow := GetProcAddress(aDLLHandle, 'SDL_CreateWindow');
  SDL_CreateWindowAndRenderer := GetProcAddress(aDLLHandle, 'SDL_CreateWindowAndRenderer');
  SDL_CreateWindowFrom := GetProcAddress(aDLLHandle, 'SDL_CreateWindowFrom');
  SDL_Delay := GetProcAddress(aDLLHandle, 'SDL_Delay');
  SDL_DelEventWatch := GetProcAddress(aDLLHandle, 'SDL_DelEventWatch');
  SDL_DelHintCallback := GetProcAddress(aDLLHandle, 'SDL_DelHintCallback');
  SDL_DequeueAudio := GetProcAddress(aDLLHandle, 'SDL_DequeueAudio');
  SDL_DestroyCond := GetProcAddress(aDLLHandle, 'SDL_DestroyCond');
  SDL_DestroyMutex := GetProcAddress(aDLLHandle, 'SDL_DestroyMutex');
  SDL_DestroyRenderer := GetProcAddress(aDLLHandle, 'SDL_DestroyRenderer');
  SDL_DestroySemaphore := GetProcAddress(aDLLHandle, 'SDL_DestroySemaphore');
  SDL_DestroyTexture := GetProcAddress(aDLLHandle, 'SDL_DestroyTexture');
  SDL_DestroyWindow := GetProcAddress(aDLLHandle, 'SDL_DestroyWindow');
  SDL_DetachThread := GetProcAddress(aDLLHandle, 'SDL_DetachThread');
  SDL_Direct3D9GetAdapterIndex := GetProcAddress(aDLLHandle, 'SDL_Direct3D9GetAdapterIndex');
  SDL_DisableScreenSaver := GetProcAddress(aDLLHandle, 'SDL_DisableScreenSaver');
  SDL_DuplicateSurface := GetProcAddress(aDLLHandle, 'SDL_DuplicateSurface');
  SDL_DXGIGetOutputInfo := GetProcAddress(aDLLHandle, 'SDL_DXGIGetOutputInfo');
  SDL_EnableScreenSaver := GetProcAddress(aDLLHandle, 'SDL_EnableScreenSaver');
  SDL_EncloseFPoints := GetProcAddress(aDLLHandle, 'SDL_EncloseFPoints');
  SDL_EnclosePoints := GetProcAddress(aDLLHandle, 'SDL_EnclosePoints');
  SDL_Error := GetProcAddress(aDLLHandle, 'SDL_Error');
  SDL_EventState := GetProcAddress(aDLLHandle, 'SDL_EventState');
  SDL_exp := GetProcAddress(aDLLHandle, 'SDL_exp');
  SDL_expf := GetProcAddress(aDLLHandle, 'SDL_expf');
  SDL_fabs := GetProcAddress(aDLLHandle, 'SDL_fabs');
  SDL_fabsf := GetProcAddress(aDLLHandle, 'SDL_fabsf');
  SDL_FillRect := GetProcAddress(aDLLHandle, 'SDL_FillRect');
  SDL_FillRects := GetProcAddress(aDLLHandle, 'SDL_FillRects');
  SDL_FilterEvents := GetProcAddress(aDLLHandle, 'SDL_FilterEvents');
  SDL_FlashWindow := GetProcAddress(aDLLHandle, 'SDL_FlashWindow');
  SDL_floor := GetProcAddress(aDLLHandle, 'SDL_floor');
  SDL_floorf := GetProcAddress(aDLLHandle, 'SDL_floorf');
  SDL_FlushEvent := GetProcAddress(aDLLHandle, 'SDL_FlushEvent');
  SDL_FlushEvents := GetProcAddress(aDLLHandle, 'SDL_FlushEvents');
  SDL_fmod := GetProcAddress(aDLLHandle, 'SDL_fmod');
  SDL_fmodf := GetProcAddress(aDLLHandle, 'SDL_fmodf');
  SDL_free := GetProcAddress(aDLLHandle, 'SDL_free');
  SDL_FreeAudioStream := GetProcAddress(aDLLHandle, 'SDL_FreeAudioStream');
  SDL_FreeCursor := GetProcAddress(aDLLHandle, 'SDL_FreeCursor');
  SDL_FreeFormat := GetProcAddress(aDLLHandle, 'SDL_FreeFormat');
  SDL_FreePalette := GetProcAddress(aDLLHandle, 'SDL_FreePalette');
  SDL_FreeRW := GetProcAddress(aDLLHandle, 'SDL_FreeRW');
  SDL_FreeSurface := GetProcAddress(aDLLHandle, 'SDL_FreeSurface');
  SDL_FreeWAV := GetProcAddress(aDLLHandle, 'SDL_FreeWAV');
  SDL_GameControllerAddMapping := GetProcAddress(aDLLHandle, 'SDL_GameControllerAddMapping');
  SDL_GameControllerAddMappingsFromRW := GetProcAddress(aDLLHandle, 'SDL_GameControllerAddMappingsFromRW');
  SDL_GameControllerClose := GetProcAddress(aDLLHandle, 'SDL_GameControllerClose');
  SDL_GameControllerEventState := GetProcAddress(aDLLHandle, 'SDL_GameControllerEventState');
  SDL_GameControllerFromInstanceID := GetProcAddress(aDLLHandle, 'SDL_GameControllerFromInstanceID');
  SDL_GameControllerFromPlayerIndex := GetProcAddress(aDLLHandle, 'SDL_GameControllerFromPlayerIndex');
  SDL_GameControllerGetAppleSFSymbolsNameForAxis := GetProcAddress(aDLLHandle, 'SDL_GameControllerGetAppleSFSymbolsNameForAxis');
  SDL_GameControllerGetAppleSFSymbolsNameForButton := GetProcAddress(aDLLHandle, 'SDL_GameControllerGetAppleSFSymbolsNameForButton');
  SDL_GameControllerGetAttached := GetProcAddress(aDLLHandle, 'SDL_GameControllerGetAttached');
  SDL_GameControllerGetAxis := GetProcAddress(aDLLHandle, 'SDL_GameControllerGetAxis');
  SDL_GameControllerGetAxisFromString := GetProcAddress(aDLLHandle, 'SDL_GameControllerGetAxisFromString');
  SDL_GameControllerGetBindForAxis := GetProcAddress(aDLLHandle, 'SDL_GameControllerGetBindForAxis');
  SDL_GameControllerGetBindForButton := GetProcAddress(aDLLHandle, 'SDL_GameControllerGetBindForButton');
  SDL_GameControllerGetButton := GetProcAddress(aDLLHandle, 'SDL_GameControllerGetButton');
  SDL_GameControllerGetButtonFromString := GetProcAddress(aDLLHandle, 'SDL_GameControllerGetButtonFromString');
  SDL_GameControllerGetFirmwareVersion := GetProcAddress(aDLLHandle, 'SDL_GameControllerGetFirmwareVersion');
  SDL_GameControllerGetJoystick := GetProcAddress(aDLLHandle, 'SDL_GameControllerGetJoystick');
  SDL_GameControllerGetNumTouchpadFingers := GetProcAddress(aDLLHandle, 'SDL_GameControllerGetNumTouchpadFingers');
  SDL_GameControllerGetNumTouchpads := GetProcAddress(aDLLHandle, 'SDL_GameControllerGetNumTouchpads');
  SDL_GameControllerGetPlayerIndex := GetProcAddress(aDLLHandle, 'SDL_GameControllerGetPlayerIndex');
  SDL_GameControllerGetProduct := GetProcAddress(aDLLHandle, 'SDL_GameControllerGetProduct');
  SDL_GameControllerGetProductVersion := GetProcAddress(aDLLHandle, 'SDL_GameControllerGetProductVersion');
  SDL_GameControllerGetSensorData := GetProcAddress(aDLLHandle, 'SDL_GameControllerGetSensorData');
  SDL_GameControllerGetSensorDataRate := GetProcAddress(aDLLHandle, 'SDL_GameControllerGetSensorDataRate');
  SDL_GameControllerGetSerial := GetProcAddress(aDLLHandle, 'SDL_GameControllerGetSerial');
  SDL_GameControllerGetStringForAxis := GetProcAddress(aDLLHandle, 'SDL_GameControllerGetStringForAxis');
  SDL_GameControllerGetStringForButton := GetProcAddress(aDLLHandle, 'SDL_GameControllerGetStringForButton');
  SDL_GameControllerGetTouchpadFinger := GetProcAddress(aDLLHandle, 'SDL_GameControllerGetTouchpadFinger');
  SDL_GameControllerGetType := GetProcAddress(aDLLHandle, 'SDL_GameControllerGetType');
  SDL_GameControllerGetVendor := GetProcAddress(aDLLHandle, 'SDL_GameControllerGetVendor');
  SDL_GameControllerHasAxis := GetProcAddress(aDLLHandle, 'SDL_GameControllerHasAxis');
  SDL_GameControllerHasButton := GetProcAddress(aDLLHandle, 'SDL_GameControllerHasButton');
  SDL_GameControllerHasLED := GetProcAddress(aDLLHandle, 'SDL_GameControllerHasLED');
  SDL_GameControllerHasRumble := GetProcAddress(aDLLHandle, 'SDL_GameControllerHasRumble');
  SDL_GameControllerHasRumbleTriggers := GetProcAddress(aDLLHandle, 'SDL_GameControllerHasRumbleTriggers');
  SDL_GameControllerHasSensor := GetProcAddress(aDLLHandle, 'SDL_GameControllerHasSensor');
  SDL_GameControllerIsSensorEnabled := GetProcAddress(aDLLHandle, 'SDL_GameControllerIsSensorEnabled');
  SDL_GameControllerMapping := GetProcAddress(aDLLHandle, 'SDL_GameControllerMapping');
  SDL_GameControllerMappingForDeviceIndex := GetProcAddress(aDLLHandle, 'SDL_GameControllerMappingForDeviceIndex');
  SDL_GameControllerMappingForGUID := GetProcAddress(aDLLHandle, 'SDL_GameControllerMappingForGUID');
  SDL_GameControllerMappingForIndex := GetProcAddress(aDLLHandle, 'SDL_GameControllerMappingForIndex');
  SDL_GameControllerName := GetProcAddress(aDLLHandle, 'SDL_GameControllerName');
  SDL_GameControllerNameForIndex := GetProcAddress(aDLLHandle, 'SDL_GameControllerNameForIndex');
  SDL_GameControllerNumMappings := GetProcAddress(aDLLHandle, 'SDL_GameControllerNumMappings');
  SDL_GameControllerOpen := GetProcAddress(aDLLHandle, 'SDL_GameControllerOpen');
  SDL_GameControllerPath := GetProcAddress(aDLLHandle, 'SDL_GameControllerPath');
  SDL_GameControllerPathForIndex := GetProcAddress(aDLLHandle, 'SDL_GameControllerPathForIndex');
  SDL_GameControllerRumble := GetProcAddress(aDLLHandle, 'SDL_GameControllerRumble');
  SDL_GameControllerRumbleTriggers := GetProcAddress(aDLLHandle, 'SDL_GameControllerRumbleTriggers');
  SDL_GameControllerSendEffect := GetProcAddress(aDLLHandle, 'SDL_GameControllerSendEffect');
  SDL_GameControllerSetLED := GetProcAddress(aDLLHandle, 'SDL_GameControllerSetLED');
  SDL_GameControllerSetPlayerIndex := GetProcAddress(aDLLHandle, 'SDL_GameControllerSetPlayerIndex');
  SDL_GameControllerSetSensorEnabled := GetProcAddress(aDLLHandle, 'SDL_GameControllerSetSensorEnabled');
  SDL_GameControllerTypeForIndex := GetProcAddress(aDLLHandle, 'SDL_GameControllerTypeForIndex');
  SDL_GameControllerUpdate := GetProcAddress(aDLLHandle, 'SDL_GameControllerUpdate');
  SDL_GetAssertionHandler := GetProcAddress(aDLLHandle, 'SDL_GetAssertionHandler');
  SDL_GetAssertionReport := GetProcAddress(aDLLHandle, 'SDL_GetAssertionReport');
  SDL_GetAudioDeviceName := GetProcAddress(aDLLHandle, 'SDL_GetAudioDeviceName');
  SDL_GetAudioDeviceSpec := GetProcAddress(aDLLHandle, 'SDL_GetAudioDeviceSpec');
  SDL_GetAudioDeviceStatus := GetProcAddress(aDLLHandle, 'SDL_GetAudioDeviceStatus');
  SDL_GetAudioDriver := GetProcAddress(aDLLHandle, 'SDL_GetAudioDriver');
  SDL_GetAudioStatus := GetProcAddress(aDLLHandle, 'SDL_GetAudioStatus');
  SDL_GetBasePath := GetProcAddress(aDLLHandle, 'SDL_GetBasePath');
  SDL_GetClipboardText := GetProcAddress(aDLLHandle, 'SDL_GetClipboardText');
  SDL_GetClipRect := GetProcAddress(aDLLHandle, 'SDL_GetClipRect');
  SDL_GetClosestDisplayMode := GetProcAddress(aDLLHandle, 'SDL_GetClosestDisplayMode');
  SDL_GetColorKey := GetProcAddress(aDLLHandle, 'SDL_GetColorKey');
  SDL_GetCPUCacheLineSize := GetProcAddress(aDLLHandle, 'SDL_GetCPUCacheLineSize');
  SDL_GetCPUCount := GetProcAddress(aDLLHandle, 'SDL_GetCPUCount');
  SDL_GetCurrentAudioDriver := GetProcAddress(aDLLHandle, 'SDL_GetCurrentAudioDriver');
  SDL_GetCurrentDisplayMode := GetProcAddress(aDLLHandle, 'SDL_GetCurrentDisplayMode');
  SDL_GetCurrentVideoDriver := GetProcAddress(aDLLHandle, 'SDL_GetCurrentVideoDriver');
  SDL_GetCursor := GetProcAddress(aDLLHandle, 'SDL_GetCursor');
  SDL_GetDefaultAssertionHandler := GetProcAddress(aDLLHandle, 'SDL_GetDefaultAssertionHandler');
  SDL_GetDefaultAudioInfo := GetProcAddress(aDLLHandle, 'SDL_GetDefaultAudioInfo');
  SDL_GetDefaultCursor := GetProcAddress(aDLLHandle, 'SDL_GetDefaultCursor');
  SDL_GetDesktopDisplayMode := GetProcAddress(aDLLHandle, 'SDL_GetDesktopDisplayMode');
  SDL_GetDisplayBounds := GetProcAddress(aDLLHandle, 'SDL_GetDisplayBounds');
  SDL_GetDisplayDPI := GetProcAddress(aDLLHandle, 'SDL_GetDisplayDPI');
  SDL_GetDisplayMode := GetProcAddress(aDLLHandle, 'SDL_GetDisplayMode');
  SDL_GetDisplayName := GetProcAddress(aDLLHandle, 'SDL_GetDisplayName');
  SDL_GetDisplayOrientation := GetProcAddress(aDLLHandle, 'SDL_GetDisplayOrientation');
  SDL_GetDisplayUsableBounds := GetProcAddress(aDLLHandle, 'SDL_GetDisplayUsableBounds');
  SDL_getenv := GetProcAddress(aDLLHandle, 'SDL_getenv');
  SDL_GetError := GetProcAddress(aDLLHandle, 'SDL_GetError');
  SDL_GetErrorMsg := GetProcAddress(aDLLHandle, 'SDL_GetErrorMsg');
  SDL_GetEventFilter := GetProcAddress(aDLLHandle, 'SDL_GetEventFilter');
  SDL_GetGlobalMouseState := GetProcAddress(aDLLHandle, 'SDL_GetGlobalMouseState');
  SDL_GetGrabbedWindow := GetProcAddress(aDLLHandle, 'SDL_GetGrabbedWindow');
  SDL_GetHint := GetProcAddress(aDLLHandle, 'SDL_GetHint');
  SDL_GetHintBoolean := GetProcAddress(aDLLHandle, 'SDL_GetHintBoolean');
  SDL_GetJoystickGUIDInfo := GetProcAddress(aDLLHandle, 'SDL_GetJoystickGUIDInfo');
  SDL_GetKeyboardFocus := GetProcAddress(aDLLHandle, 'SDL_GetKeyboardFocus');
  SDL_GetKeyboardState := GetProcAddress(aDLLHandle, 'SDL_GetKeyboardState');
  SDL_GetKeyFromName := GetProcAddress(aDLLHandle, 'SDL_GetKeyFromName');
  SDL_GetKeyFromScancode := GetProcAddress(aDLLHandle, 'SDL_GetKeyFromScancode');
  SDL_GetKeyName := GetProcAddress(aDLLHandle, 'SDL_GetKeyName');
  SDL_GetMemoryFunctions := GetProcAddress(aDLLHandle, 'SDL_GetMemoryFunctions');
  SDL_GetModState := GetProcAddress(aDLLHandle, 'SDL_GetModState');
  SDL_GetMouseFocus := GetProcAddress(aDLLHandle, 'SDL_GetMouseFocus');
  SDL_GetMouseState := GetProcAddress(aDLLHandle, 'SDL_GetMouseState');
  SDL_GetNumAllocations := GetProcAddress(aDLLHandle, 'SDL_GetNumAllocations');
  SDL_GetNumAudioDevices := GetProcAddress(aDLLHandle, 'SDL_GetNumAudioDevices');
  SDL_GetNumAudioDrivers := GetProcAddress(aDLLHandle, 'SDL_GetNumAudioDrivers');
  SDL_GetNumDisplayModes := GetProcAddress(aDLLHandle, 'SDL_GetNumDisplayModes');
  SDL_GetNumRenderDrivers := GetProcAddress(aDLLHandle, 'SDL_GetNumRenderDrivers');
  SDL_GetNumTouchDevices := GetProcAddress(aDLLHandle, 'SDL_GetNumTouchDevices');
  SDL_GetNumTouchFingers := GetProcAddress(aDLLHandle, 'SDL_GetNumTouchFingers');
  SDL_GetNumVideoDisplays := GetProcAddress(aDLLHandle, 'SDL_GetNumVideoDisplays');
  SDL_GetNumVideoDrivers := GetProcAddress(aDLLHandle, 'SDL_GetNumVideoDrivers');
  SDL_GetOriginalMemoryFunctions := GetProcAddress(aDLLHandle, 'SDL_GetOriginalMemoryFunctions');
  SDL_GetPerformanceCounter := GetProcAddress(aDLLHandle, 'SDL_GetPerformanceCounter');
  SDL_GetPerformanceFrequency := GetProcAddress(aDLLHandle, 'SDL_GetPerformanceFrequency');
  SDL_GetPixelFormatName := GetProcAddress(aDLLHandle, 'SDL_GetPixelFormatName');
  SDL_GetPlatform := GetProcAddress(aDLLHandle, 'SDL_GetPlatform');
  SDL_GetPointDisplayIndex := GetProcAddress(aDLLHandle, 'SDL_GetPointDisplayIndex');
  SDL_GetPowerInfo := GetProcAddress(aDLLHandle, 'SDL_GetPowerInfo');
  SDL_GetPreferredLocales := GetProcAddress(aDLLHandle, 'SDL_GetPreferredLocales');
  SDL_GetPrefPath := GetProcAddress(aDLLHandle, 'SDL_GetPrefPath');
  SDL_GetPrimarySelectionText := GetProcAddress(aDLLHandle, 'SDL_GetPrimarySelectionText');
  SDL_GetQueuedAudioSize := GetProcAddress(aDLLHandle, 'SDL_GetQueuedAudioSize');
  SDL_GetRectDisplayIndex := GetProcAddress(aDLLHandle, 'SDL_GetRectDisplayIndex');
  SDL_GetRelativeMouseMode := GetProcAddress(aDLLHandle, 'SDL_GetRelativeMouseMode');
  SDL_GetRelativeMouseState := GetProcAddress(aDLLHandle, 'SDL_GetRelativeMouseState');
  SDL_GetRenderDrawBlendMode := GetProcAddress(aDLLHandle, 'SDL_GetRenderDrawBlendMode');
  SDL_GetRenderDrawColor := GetProcAddress(aDLLHandle, 'SDL_GetRenderDrawColor');
  SDL_GetRenderDriverInfo := GetProcAddress(aDLLHandle, 'SDL_GetRenderDriverInfo');
  SDL_GetRenderer := GetProcAddress(aDLLHandle, 'SDL_GetRenderer');
  SDL_GetRendererInfo := GetProcAddress(aDLLHandle, 'SDL_GetRendererInfo');
  SDL_GetRendererOutputSize := GetProcAddress(aDLLHandle, 'SDL_GetRendererOutputSize');
  SDL_GetRenderTarget := GetProcAddress(aDLLHandle, 'SDL_GetRenderTarget');
  SDL_GetRevision := GetProcAddress(aDLLHandle, 'SDL_GetRevision');
  SDL_GetRevisionNumber := GetProcAddress(aDLLHandle, 'SDL_GetRevisionNumber');
  SDL_GetRGB := GetProcAddress(aDLLHandle, 'SDL_GetRGB');
  SDL_GetRGBA := GetProcAddress(aDLLHandle, 'SDL_GetRGBA');
  SDL_GetScancodeFromKey := GetProcAddress(aDLLHandle, 'SDL_GetScancodeFromKey');
  SDL_GetScancodeFromName := GetProcAddress(aDLLHandle, 'SDL_GetScancodeFromName');
  SDL_GetScancodeName := GetProcAddress(aDLLHandle, 'SDL_GetScancodeName');
  SDL_GetShapedWindowMode := GetProcAddress(aDLLHandle, 'SDL_GetShapedWindowMode');
  SDL_GetSurfaceAlphaMod := GetProcAddress(aDLLHandle, 'SDL_GetSurfaceAlphaMod');
  SDL_GetSurfaceBlendMode := GetProcAddress(aDLLHandle, 'SDL_GetSurfaceBlendMode');
  SDL_GetSurfaceColorMod := GetProcAddress(aDLLHandle, 'SDL_GetSurfaceColorMod');
  SDL_GetSystemRAM := GetProcAddress(aDLLHandle, 'SDL_GetSystemRAM');
  SDL_GetTextureAlphaMod := GetProcAddress(aDLLHandle, 'SDL_GetTextureAlphaMod');
  SDL_GetTextureBlendMode := GetProcAddress(aDLLHandle, 'SDL_GetTextureBlendMode');
  SDL_GetTextureColorMod := GetProcAddress(aDLLHandle, 'SDL_GetTextureColorMod');
  SDL_GetTextureScaleMode := GetProcAddress(aDLLHandle, 'SDL_GetTextureScaleMode');
  SDL_GetTextureUserData := GetProcAddress(aDLLHandle, 'SDL_GetTextureUserData');
  SDL_GetThreadID := GetProcAddress(aDLLHandle, 'SDL_GetThreadID');
  SDL_GetThreadName := GetProcAddress(aDLLHandle, 'SDL_GetThreadName');
  SDL_GetTicks := GetProcAddress(aDLLHandle, 'SDL_GetTicks');
  SDL_GetTicks64 := GetProcAddress(aDLLHandle, 'SDL_GetTicks64');
  SDL_GetTouchDevice := GetProcAddress(aDLLHandle, 'SDL_GetTouchDevice');
  SDL_GetTouchDeviceType := GetProcAddress(aDLLHandle, 'SDL_GetTouchDeviceType');
  SDL_GetTouchFinger := GetProcAddress(aDLLHandle, 'SDL_GetTouchFinger');
  SDL_GetTouchName := GetProcAddress(aDLLHandle, 'SDL_GetTouchName');
  SDL_GetVersion := GetProcAddress(aDLLHandle, 'SDL_GetVersion');
  SDL_GetVideoDriver := GetProcAddress(aDLLHandle, 'SDL_GetVideoDriver');
  SDL_GetWindowBordersSize := GetProcAddress(aDLLHandle, 'SDL_GetWindowBordersSize');
  SDL_GetWindowBrightness := GetProcAddress(aDLLHandle, 'SDL_GetWindowBrightness');
  SDL_GetWindowData := GetProcAddress(aDLLHandle, 'SDL_GetWindowData');
  SDL_GetWindowDisplayIndex := GetProcAddress(aDLLHandle, 'SDL_GetWindowDisplayIndex');
  SDL_GetWindowDisplayMode := GetProcAddress(aDLLHandle, 'SDL_GetWindowDisplayMode');
  SDL_GetWindowFlags := GetProcAddress(aDLLHandle, 'SDL_GetWindowFlags');
  SDL_GetWindowFromID := GetProcAddress(aDLLHandle, 'SDL_GetWindowFromID');
  SDL_GetWindowGammaRamp := GetProcAddress(aDLLHandle, 'SDL_GetWindowGammaRamp');
  SDL_GetWindowGrab := GetProcAddress(aDLLHandle, 'SDL_GetWindowGrab');
  SDL_GetWindowICCProfile := GetProcAddress(aDLLHandle, 'SDL_GetWindowICCProfile');
  SDL_GetWindowID := GetProcAddress(aDLLHandle, 'SDL_GetWindowID');
  SDL_GetWindowKeyboardGrab := GetProcAddress(aDLLHandle, 'SDL_GetWindowKeyboardGrab');
  SDL_GetWindowMaximumSize := GetProcAddress(aDLLHandle, 'SDL_GetWindowMaximumSize');
  SDL_GetWindowMinimumSize := GetProcAddress(aDLLHandle, 'SDL_GetWindowMinimumSize');
  SDL_GetWindowMouseGrab := GetProcAddress(aDLLHandle, 'SDL_GetWindowMouseGrab');
  SDL_GetWindowMouseRect := GetProcAddress(aDLLHandle, 'SDL_GetWindowMouseRect');
  SDL_GetWindowOpacity := GetProcAddress(aDLLHandle, 'SDL_GetWindowOpacity');
  SDL_GetWindowPixelFormat := GetProcAddress(aDLLHandle, 'SDL_GetWindowPixelFormat');
  SDL_GetWindowPosition := GetProcAddress(aDLLHandle, 'SDL_GetWindowPosition');
  SDL_GetWindowSize := GetProcAddress(aDLLHandle, 'SDL_GetWindowSize');
  SDL_GetWindowSizeInPixels := GetProcAddress(aDLLHandle, 'SDL_GetWindowSizeInPixels');
  SDL_GetWindowSurface := GetProcAddress(aDLLHandle, 'SDL_GetWindowSurface');
  SDL_GetWindowTitle := GetProcAddress(aDLLHandle, 'SDL_GetWindowTitle');
  SDL_GetYUVConversionMode := GetProcAddress(aDLLHandle, 'SDL_GetYUVConversionMode');
  SDL_GetYUVConversionModeForResolution := GetProcAddress(aDLLHandle, 'SDL_GetYUVConversionModeForResolution');
  SDL_GL_BindTexture := GetProcAddress(aDLLHandle, 'SDL_GL_BindTexture');
  SDL_GL_CreateContext := GetProcAddress(aDLLHandle, 'SDL_GL_CreateContext');
  SDL_GL_DeleteContext := GetProcAddress(aDLLHandle, 'SDL_GL_DeleteContext');
  SDL_GL_ExtensionSupported := GetProcAddress(aDLLHandle, 'SDL_GL_ExtensionSupported');
  SDL_GL_GetAttribute := GetProcAddress(aDLLHandle, 'SDL_GL_GetAttribute');
  SDL_GL_GetCurrentContext := GetProcAddress(aDLLHandle, 'SDL_GL_GetCurrentContext');
  SDL_GL_GetCurrentWindow := GetProcAddress(aDLLHandle, 'SDL_GL_GetCurrentWindow');
  SDL_GL_GetDrawableSize := GetProcAddress(aDLLHandle, 'SDL_GL_GetDrawableSize');
  SDL_GL_GetProcAddress := GetProcAddress(aDLLHandle, 'SDL_GL_GetProcAddress');
  SDL_GL_GetSwapInterval := GetProcAddress(aDLLHandle, 'SDL_GL_GetSwapInterval');
  SDL_GL_LoadLibrary := GetProcAddress(aDLLHandle, 'SDL_GL_LoadLibrary');
  SDL_GL_MakeCurrent := GetProcAddress(aDLLHandle, 'SDL_GL_MakeCurrent');
  SDL_GL_ResetAttributes := GetProcAddress(aDLLHandle, 'SDL_GL_ResetAttributes');
  SDL_GL_SetAttribute := GetProcAddress(aDLLHandle, 'SDL_GL_SetAttribute');
  SDL_GL_SetSwapInterval := GetProcAddress(aDLLHandle, 'SDL_GL_SetSwapInterval');
  SDL_GL_SwapWindow := GetProcAddress(aDLLHandle, 'SDL_GL_SwapWindow');
  SDL_GL_UnbindTexture := GetProcAddress(aDLLHandle, 'SDL_GL_UnbindTexture');
  SDL_GL_UnloadLibrary := GetProcAddress(aDLLHandle, 'SDL_GL_UnloadLibrary');
  SDL_GUIDFromString := GetProcAddress(aDLLHandle, 'SDL_GUIDFromString');
  SDL_GUIDToString := GetProcAddress(aDLLHandle, 'SDL_GUIDToString');
  SDL_HapticClose := GetProcAddress(aDLLHandle, 'SDL_HapticClose');
  SDL_HapticDestroyEffect := GetProcAddress(aDLLHandle, 'SDL_HapticDestroyEffect');
  SDL_HapticEffectSupported := GetProcAddress(aDLLHandle, 'SDL_HapticEffectSupported');
  SDL_HapticGetEffectStatus := GetProcAddress(aDLLHandle, 'SDL_HapticGetEffectStatus');
  SDL_HapticIndex := GetProcAddress(aDLLHandle, 'SDL_HapticIndex');
  SDL_HapticName := GetProcAddress(aDLLHandle, 'SDL_HapticName');
  SDL_HapticNewEffect := GetProcAddress(aDLLHandle, 'SDL_HapticNewEffect');
  SDL_HapticNumAxes := GetProcAddress(aDLLHandle, 'SDL_HapticNumAxes');
  SDL_HapticNumEffects := GetProcAddress(aDLLHandle, 'SDL_HapticNumEffects');
  SDL_HapticNumEffectsPlaying := GetProcAddress(aDLLHandle, 'SDL_HapticNumEffectsPlaying');
  SDL_HapticOpen := GetProcAddress(aDLLHandle, 'SDL_HapticOpen');
  SDL_HapticOpened := GetProcAddress(aDLLHandle, 'SDL_HapticOpened');
  SDL_HapticOpenFromJoystick := GetProcAddress(aDLLHandle, 'SDL_HapticOpenFromJoystick');
  SDL_HapticOpenFromMouse := GetProcAddress(aDLLHandle, 'SDL_HapticOpenFromMouse');
  SDL_HapticPause := GetProcAddress(aDLLHandle, 'SDL_HapticPause');
  SDL_HapticQuery := GetProcAddress(aDLLHandle, 'SDL_HapticQuery');
  SDL_HapticRumbleInit := GetProcAddress(aDLLHandle, 'SDL_HapticRumbleInit');
  SDL_HapticRumblePlay := GetProcAddress(aDLLHandle, 'SDL_HapticRumblePlay');
  SDL_HapticRumbleStop := GetProcAddress(aDLLHandle, 'SDL_HapticRumbleStop');
  SDL_HapticRumbleSupported := GetProcAddress(aDLLHandle, 'SDL_HapticRumbleSupported');
  SDL_HapticRunEffect := GetProcAddress(aDLLHandle, 'SDL_HapticRunEffect');
  SDL_HapticSetAutocenter := GetProcAddress(aDLLHandle, 'SDL_HapticSetAutocenter');
  SDL_HapticSetGain := GetProcAddress(aDLLHandle, 'SDL_HapticSetGain');
  SDL_HapticStopAll := GetProcAddress(aDLLHandle, 'SDL_HapticStopAll');
  SDL_HapticStopEffect := GetProcAddress(aDLLHandle, 'SDL_HapticStopEffect');
  SDL_HapticUnpause := GetProcAddress(aDLLHandle, 'SDL_HapticUnpause');
  SDL_HapticUpdateEffect := GetProcAddress(aDLLHandle, 'SDL_HapticUpdateEffect');
  SDL_Has3DNow := GetProcAddress(aDLLHandle, 'SDL_Has3DNow');
  SDL_HasAltiVec := GetProcAddress(aDLLHandle, 'SDL_HasAltiVec');
  SDL_HasARMSIMD := GetProcAddress(aDLLHandle, 'SDL_HasARMSIMD');
  SDL_HasAVX := GetProcAddress(aDLLHandle, 'SDL_HasAVX');
  SDL_HasAVX2 := GetProcAddress(aDLLHandle, 'SDL_HasAVX2');
  SDL_HasAVX512F := GetProcAddress(aDLLHandle, 'SDL_HasAVX512F');
  SDL_HasClipboardText := GetProcAddress(aDLLHandle, 'SDL_HasClipboardText');
  SDL_HasColorKey := GetProcAddress(aDLLHandle, 'SDL_HasColorKey');
  SDL_HasEvent := GetProcAddress(aDLLHandle, 'SDL_HasEvent');
  SDL_HasEvents := GetProcAddress(aDLLHandle, 'SDL_HasEvents');
  SDL_HasIntersection := GetProcAddress(aDLLHandle, 'SDL_HasIntersection');
  SDL_HasIntersectionF := GetProcAddress(aDLLHandle, 'SDL_HasIntersectionF');
  SDL_HasLASX := GetProcAddress(aDLLHandle, 'SDL_HasLASX');
  SDL_HasLSX := GetProcAddress(aDLLHandle, 'SDL_HasLSX');
  SDL_HasMMX := GetProcAddress(aDLLHandle, 'SDL_HasMMX');
  SDL_HasNEON := GetProcAddress(aDLLHandle, 'SDL_HasNEON');
  SDL_HasPrimarySelectionText := GetProcAddress(aDLLHandle, 'SDL_HasPrimarySelectionText');
  SDL_HasRDTSC := GetProcAddress(aDLLHandle, 'SDL_HasRDTSC');
  SDL_HasScreenKeyboardSupport := GetProcAddress(aDLLHandle, 'SDL_HasScreenKeyboardSupport');
  SDL_HasSSE := GetProcAddress(aDLLHandle, 'SDL_HasSSE');
  SDL_HasSSE2 := GetProcAddress(aDLLHandle, 'SDL_HasSSE2');
  SDL_HasSSE3 := GetProcAddress(aDLLHandle, 'SDL_HasSSE3');
  SDL_HasSSE41 := GetProcAddress(aDLLHandle, 'SDL_HasSSE41');
  SDL_HasSSE42 := GetProcAddress(aDLLHandle, 'SDL_HasSSE42');
  SDL_HasSurfaceRLE := GetProcAddress(aDLLHandle, 'SDL_HasSurfaceRLE');
  SDL_hid_ble_scan := GetProcAddress(aDLLHandle, 'SDL_hid_ble_scan');
  SDL_hid_close := GetProcAddress(aDLLHandle, 'SDL_hid_close');
  SDL_hid_device_change_count := GetProcAddress(aDLLHandle, 'SDL_hid_device_change_count');
  SDL_hid_enumerate := GetProcAddress(aDLLHandle, 'SDL_hid_enumerate');
  SDL_hid_exit := GetProcAddress(aDLLHandle, 'SDL_hid_exit');
  SDL_hid_free_enumeration := GetProcAddress(aDLLHandle, 'SDL_hid_free_enumeration');
  SDL_hid_get_feature_report := GetProcAddress(aDLLHandle, 'SDL_hid_get_feature_report');
  SDL_hid_get_indexed_string := GetProcAddress(aDLLHandle, 'SDL_hid_get_indexed_string');
  SDL_hid_get_manufacturer_string := GetProcAddress(aDLLHandle, 'SDL_hid_get_manufacturer_string');
  SDL_hid_get_product_string := GetProcAddress(aDLLHandle, 'SDL_hid_get_product_string');
  SDL_hid_get_serial_number_string := GetProcAddress(aDLLHandle, 'SDL_hid_get_serial_number_string');
  SDL_hid_init := GetProcAddress(aDLLHandle, 'SDL_hid_init');
  SDL_hid_open := GetProcAddress(aDLLHandle, 'SDL_hid_open');
  SDL_hid_open_path := GetProcAddress(aDLLHandle, 'SDL_hid_open_path');
  SDL_hid_read := GetProcAddress(aDLLHandle, 'SDL_hid_read');
  SDL_hid_read_timeout := GetProcAddress(aDLLHandle, 'SDL_hid_read_timeout');
  SDL_hid_send_feature_report := GetProcAddress(aDLLHandle, 'SDL_hid_send_feature_report');
  SDL_hid_set_nonblocking := GetProcAddress(aDLLHandle, 'SDL_hid_set_nonblocking');
  SDL_hid_write := GetProcAddress(aDLLHandle, 'SDL_hid_write');
  SDL_HideWindow := GetProcAddress(aDLLHandle, 'SDL_HideWindow');
  SDL_iconv := GetProcAddress(aDLLHandle, 'SDL_iconv');
  SDL_iconv_close := GetProcAddress(aDLLHandle, 'SDL_iconv_close');
  SDL_iconv_open := GetProcAddress(aDLLHandle, 'SDL_iconv_open');
  SDL_iconv_string := GetProcAddress(aDLLHandle, 'SDL_iconv_string');
  SDL_Init := GetProcAddress(aDLLHandle, 'SDL_Init');
  SDL_InitSubSystem := GetProcAddress(aDLLHandle, 'SDL_InitSubSystem');
  SDL_IntersectFRect := GetProcAddress(aDLLHandle, 'SDL_IntersectFRect');
  SDL_IntersectFRectAndLine := GetProcAddress(aDLLHandle, 'SDL_IntersectFRectAndLine');
  SDL_IntersectRect := GetProcAddress(aDLLHandle, 'SDL_IntersectRect');
  SDL_IntersectRectAndLine := GetProcAddress(aDLLHandle, 'SDL_IntersectRectAndLine');
  SDL_isalnum := GetProcAddress(aDLLHandle, 'SDL_isalnum');
  SDL_isalpha := GetProcAddress(aDLLHandle, 'SDL_isalpha');
  SDL_isblank := GetProcAddress(aDLLHandle, 'SDL_isblank');
  SDL_iscntrl := GetProcAddress(aDLLHandle, 'SDL_iscntrl');
  SDL_isdigit := GetProcAddress(aDLLHandle, 'SDL_isdigit');
  SDL_IsGameController := GetProcAddress(aDLLHandle, 'SDL_IsGameController');
  SDL_isgraph := GetProcAddress(aDLLHandle, 'SDL_isgraph');
  SDL_islower := GetProcAddress(aDLLHandle, 'SDL_islower');
  SDL_isprint := GetProcAddress(aDLLHandle, 'SDL_isprint');
  SDL_ispunct := GetProcAddress(aDLLHandle, 'SDL_ispunct');
  SDL_IsScreenKeyboardShown := GetProcAddress(aDLLHandle, 'SDL_IsScreenKeyboardShown');
  SDL_IsScreenSaverEnabled := GetProcAddress(aDLLHandle, 'SDL_IsScreenSaverEnabled');
  SDL_IsShapedWindow := GetProcAddress(aDLLHandle, 'SDL_IsShapedWindow');
  SDL_isspace := GetProcAddress(aDLLHandle, 'SDL_isspace');
  SDL_IsTablet := GetProcAddress(aDLLHandle, 'SDL_IsTablet');
  SDL_IsTextInputActive := GetProcAddress(aDLLHandle, 'SDL_IsTextInputActive');
  SDL_IsTextInputShown := GetProcAddress(aDLLHandle, 'SDL_IsTextInputShown');
  SDL_isupper := GetProcAddress(aDLLHandle, 'SDL_isupper');
  SDL_isxdigit := GetProcAddress(aDLLHandle, 'SDL_isxdigit');
  SDL_itoa := GetProcAddress(aDLLHandle, 'SDL_itoa');
  SDL_JoystickAttachVirtual := GetProcAddress(aDLLHandle, 'SDL_JoystickAttachVirtual');
  SDL_JoystickAttachVirtualEx := GetProcAddress(aDLLHandle, 'SDL_JoystickAttachVirtualEx');
  SDL_JoystickClose := GetProcAddress(aDLLHandle, 'SDL_JoystickClose');
  SDL_JoystickCurrentPowerLevel := GetProcAddress(aDLLHandle, 'SDL_JoystickCurrentPowerLevel');
  SDL_JoystickDetachVirtual := GetProcAddress(aDLLHandle, 'SDL_JoystickDetachVirtual');
  SDL_JoystickEventState := GetProcAddress(aDLLHandle, 'SDL_JoystickEventState');
  SDL_JoystickFromInstanceID := GetProcAddress(aDLLHandle, 'SDL_JoystickFromInstanceID');
  SDL_JoystickFromPlayerIndex := GetProcAddress(aDLLHandle, 'SDL_JoystickFromPlayerIndex');
  SDL_JoystickGetAttached := GetProcAddress(aDLLHandle, 'SDL_JoystickGetAttached');
  SDL_JoystickGetAxis := GetProcAddress(aDLLHandle, 'SDL_JoystickGetAxis');
  SDL_JoystickGetAxisInitialState := GetProcAddress(aDLLHandle, 'SDL_JoystickGetAxisInitialState');
  SDL_JoystickGetBall := GetProcAddress(aDLLHandle, 'SDL_JoystickGetBall');
  SDL_JoystickGetButton := GetProcAddress(aDLLHandle, 'SDL_JoystickGetButton');
  SDL_JoystickGetDeviceGUID := GetProcAddress(aDLLHandle, 'SDL_JoystickGetDeviceGUID');
  SDL_JoystickGetDeviceInstanceID := GetProcAddress(aDLLHandle, 'SDL_JoystickGetDeviceInstanceID');
  SDL_JoystickGetDevicePlayerIndex := GetProcAddress(aDLLHandle, 'SDL_JoystickGetDevicePlayerIndex');
  SDL_JoystickGetDeviceProduct := GetProcAddress(aDLLHandle, 'SDL_JoystickGetDeviceProduct');
  SDL_JoystickGetDeviceProductVersion := GetProcAddress(aDLLHandle, 'SDL_JoystickGetDeviceProductVersion');
  SDL_JoystickGetDeviceType := GetProcAddress(aDLLHandle, 'SDL_JoystickGetDeviceType');
  SDL_JoystickGetDeviceVendor := GetProcAddress(aDLLHandle, 'SDL_JoystickGetDeviceVendor');
  SDL_JoystickGetFirmwareVersion := GetProcAddress(aDLLHandle, 'SDL_JoystickGetFirmwareVersion');
  SDL_JoystickGetGUID := GetProcAddress(aDLLHandle, 'SDL_JoystickGetGUID');
  SDL_JoystickGetGUIDFromString := GetProcAddress(aDLLHandle, 'SDL_JoystickGetGUIDFromString');
  SDL_JoystickGetGUIDString := GetProcAddress(aDLLHandle, 'SDL_JoystickGetGUIDString');
  SDL_JoystickGetHat := GetProcAddress(aDLLHandle, 'SDL_JoystickGetHat');
  SDL_JoystickGetPlayerIndex := GetProcAddress(aDLLHandle, 'SDL_JoystickGetPlayerIndex');
  SDL_JoystickGetProduct := GetProcAddress(aDLLHandle, 'SDL_JoystickGetProduct');
  SDL_JoystickGetProductVersion := GetProcAddress(aDLLHandle, 'SDL_JoystickGetProductVersion');
  SDL_JoystickGetSerial := GetProcAddress(aDLLHandle, 'SDL_JoystickGetSerial');
  SDL_JoystickGetType := GetProcAddress(aDLLHandle, 'SDL_JoystickGetType');
  SDL_JoystickGetVendor := GetProcAddress(aDLLHandle, 'SDL_JoystickGetVendor');
  SDL_JoystickHasLED := GetProcAddress(aDLLHandle, 'SDL_JoystickHasLED');
  SDL_JoystickHasRumble := GetProcAddress(aDLLHandle, 'SDL_JoystickHasRumble');
  SDL_JoystickHasRumbleTriggers := GetProcAddress(aDLLHandle, 'SDL_JoystickHasRumbleTriggers');
  SDL_JoystickInstanceID := GetProcAddress(aDLLHandle, 'SDL_JoystickInstanceID');
  SDL_JoystickIsHaptic := GetProcAddress(aDLLHandle, 'SDL_JoystickIsHaptic');
  SDL_JoystickIsVirtual := GetProcAddress(aDLLHandle, 'SDL_JoystickIsVirtual');
  SDL_JoystickName := GetProcAddress(aDLLHandle, 'SDL_JoystickName');
  SDL_JoystickNameForIndex := GetProcAddress(aDLLHandle, 'SDL_JoystickNameForIndex');
  SDL_JoystickNumAxes := GetProcAddress(aDLLHandle, 'SDL_JoystickNumAxes');
  SDL_JoystickNumBalls := GetProcAddress(aDLLHandle, 'SDL_JoystickNumBalls');
  SDL_JoystickNumButtons := GetProcAddress(aDLLHandle, 'SDL_JoystickNumButtons');
  SDL_JoystickNumHats := GetProcAddress(aDLLHandle, 'SDL_JoystickNumHats');
  SDL_JoystickOpen := GetProcAddress(aDLLHandle, 'SDL_JoystickOpen');
  SDL_JoystickPath := GetProcAddress(aDLLHandle, 'SDL_JoystickPath');
  SDL_JoystickPathForIndex := GetProcAddress(aDLLHandle, 'SDL_JoystickPathForIndex');
  SDL_JoystickRumble := GetProcAddress(aDLLHandle, 'SDL_JoystickRumble');
  SDL_JoystickRumbleTriggers := GetProcAddress(aDLLHandle, 'SDL_JoystickRumbleTriggers');
  SDL_JoystickSendEffect := GetProcAddress(aDLLHandle, 'SDL_JoystickSendEffect');
  SDL_JoystickSetLED := GetProcAddress(aDLLHandle, 'SDL_JoystickSetLED');
  SDL_JoystickSetPlayerIndex := GetProcAddress(aDLLHandle, 'SDL_JoystickSetPlayerIndex');
  SDL_JoystickSetVirtualAxis := GetProcAddress(aDLLHandle, 'SDL_JoystickSetVirtualAxis');
  SDL_JoystickSetVirtualButton := GetProcAddress(aDLLHandle, 'SDL_JoystickSetVirtualButton');
  SDL_JoystickSetVirtualHat := GetProcAddress(aDLLHandle, 'SDL_JoystickSetVirtualHat');
  SDL_JoystickUpdate := GetProcAddress(aDLLHandle, 'SDL_JoystickUpdate');
  SDL_lltoa := GetProcAddress(aDLLHandle, 'SDL_lltoa');
  SDL_LoadBMP_RW := GetProcAddress(aDLLHandle, 'SDL_LoadBMP_RW');
  SDL_LoadDollarTemplates := GetProcAddress(aDLLHandle, 'SDL_LoadDollarTemplates');
  SDL_LoadFile := GetProcAddress(aDLLHandle, 'SDL_LoadFile');
  SDL_LoadFile_RW := GetProcAddress(aDLLHandle, 'SDL_LoadFile_RW');
  SDL_LoadFunction := GetProcAddress(aDLLHandle, 'SDL_LoadFunction');
  SDL_LoadObject := GetProcAddress(aDLLHandle, 'SDL_LoadObject');
  SDL_LoadWAV_RW := GetProcAddress(aDLLHandle, 'SDL_LoadWAV_RW');
  SDL_LockAudio := GetProcAddress(aDLLHandle, 'SDL_LockAudio');
  SDL_LockAudioDevice := GetProcAddress(aDLLHandle, 'SDL_LockAudioDevice');
  SDL_LockJoysticks := GetProcAddress(aDLLHandle, 'SDL_LockJoysticks');
  SDL_LockMutex := GetProcAddress(aDLLHandle, 'SDL_LockMutex');
  SDL_LockSensors := GetProcAddress(aDLLHandle, 'SDL_LockSensors');
  SDL_LockSurface := GetProcAddress(aDLLHandle, 'SDL_LockSurface');
  SDL_LockTexture := GetProcAddress(aDLLHandle, 'SDL_LockTexture');
  SDL_LockTextureToSurface := GetProcAddress(aDLLHandle, 'SDL_LockTextureToSurface');
  SDL_log := GetProcAddress(aDLLHandle, 'SDL_log');
  SDL_Log_ := GetProcAddress(aDLLHandle, 'SDL_Log_');
  SDL_log10 := GetProcAddress(aDLLHandle, 'SDL_log10');
  SDL_log10f := GetProcAddress(aDLLHandle, 'SDL_log10f');
  SDL_LogCritical := GetProcAddress(aDLLHandle, 'SDL_LogCritical');
  SDL_LogDebug := GetProcAddress(aDLLHandle, 'SDL_LogDebug');
  SDL_LogError := GetProcAddress(aDLLHandle, 'SDL_LogError');
  SDL_logf := GetProcAddress(aDLLHandle, 'SDL_logf');
  SDL_LogGetOutputFunction := GetProcAddress(aDLLHandle, 'SDL_LogGetOutputFunction');
  SDL_LogGetPriority := GetProcAddress(aDLLHandle, 'SDL_LogGetPriority');
  SDL_LogInfo := GetProcAddress(aDLLHandle, 'SDL_LogInfo');
  SDL_LogMessage := GetProcAddress(aDLLHandle, 'SDL_LogMessage');
  SDL_LogMessageV := GetProcAddress(aDLLHandle, 'SDL_LogMessageV');
  SDL_LogResetPriorities := GetProcAddress(aDLLHandle, 'SDL_LogResetPriorities');
  SDL_LogSetAllPriority := GetProcAddress(aDLLHandle, 'SDL_LogSetAllPriority');
  SDL_LogSetOutputFunction := GetProcAddress(aDLLHandle, 'SDL_LogSetOutputFunction');
  SDL_LogSetPriority := GetProcAddress(aDLLHandle, 'SDL_LogSetPriority');
  SDL_LogVerbose := GetProcAddress(aDLLHandle, 'SDL_LogVerbose');
  SDL_LogWarn := GetProcAddress(aDLLHandle, 'SDL_LogWarn');
  SDL_LowerBlit := GetProcAddress(aDLLHandle, 'SDL_LowerBlit');
  SDL_LowerBlitScaled := GetProcAddress(aDLLHandle, 'SDL_LowerBlitScaled');
  SDL_lround := GetProcAddress(aDLLHandle, 'SDL_lround');
  SDL_lroundf := GetProcAddress(aDLLHandle, 'SDL_lroundf');
  SDL_ltoa := GetProcAddress(aDLLHandle, 'SDL_ltoa');
  SDL_main := GetProcAddress(aDLLHandle, 'SDL_main');
  SDL_malloc := GetProcAddress(aDLLHandle, 'SDL_malloc');
  SDL_MapRGB := GetProcAddress(aDLLHandle, 'SDL_MapRGB');
  SDL_MapRGBA := GetProcAddress(aDLLHandle, 'SDL_MapRGBA');
  SDL_MasksToPixelFormatEnum := GetProcAddress(aDLLHandle, 'SDL_MasksToPixelFormatEnum');
  SDL_MaximizeWindow := GetProcAddress(aDLLHandle, 'SDL_MaximizeWindow');
  SDL_memcmp := GetProcAddress(aDLLHandle, 'SDL_memcmp');
  SDL_memcpy := GetProcAddress(aDLLHandle, 'SDL_memcpy');
  SDL_memmove := GetProcAddress(aDLLHandle, 'SDL_memmove');
  SDL_MemoryBarrierAcquireFunction := GetProcAddress(aDLLHandle, 'SDL_MemoryBarrierAcquireFunction');
  SDL_MemoryBarrierReleaseFunction := GetProcAddress(aDLLHandle, 'SDL_MemoryBarrierReleaseFunction');
  SDL_memset := GetProcAddress(aDLLHandle, 'SDL_memset');
  SDL_Metal_CreateView := GetProcAddress(aDLLHandle, 'SDL_Metal_CreateView');
  SDL_Metal_DestroyView := GetProcAddress(aDLLHandle, 'SDL_Metal_DestroyView');
  SDL_Metal_GetDrawableSize := GetProcAddress(aDLLHandle, 'SDL_Metal_GetDrawableSize');
  SDL_Metal_GetLayer := GetProcAddress(aDLLHandle, 'SDL_Metal_GetLayer');
  SDL_MinimizeWindow := GetProcAddress(aDLLHandle, 'SDL_MinimizeWindow');
  SDL_MixAudio := GetProcAddress(aDLLHandle, 'SDL_MixAudio');
  SDL_MixAudioFormat := GetProcAddress(aDLLHandle, 'SDL_MixAudioFormat');
  SDL_MouseIsHaptic := GetProcAddress(aDLLHandle, 'SDL_MouseIsHaptic');
  SDL_NewAudioStream := GetProcAddress(aDLLHandle, 'SDL_NewAudioStream');
  SDL_NumHaptics := GetProcAddress(aDLLHandle, 'SDL_NumHaptics');
  SDL_NumJoysticks := GetProcAddress(aDLLHandle, 'SDL_NumJoysticks');
  SDL_NumSensors := GetProcAddress(aDLLHandle, 'SDL_NumSensors');
  SDL_OnApplicationDidBecomeActive := GetProcAddress(aDLLHandle, 'SDL_OnApplicationDidBecomeActive');
  SDL_OnApplicationDidEnterBackground := GetProcAddress(aDLLHandle, 'SDL_OnApplicationDidEnterBackground');
  SDL_OnApplicationDidReceiveMemoryWarning := GetProcAddress(aDLLHandle, 'SDL_OnApplicationDidReceiveMemoryWarning');
  SDL_OnApplicationWillEnterForeground := GetProcAddress(aDLLHandle, 'SDL_OnApplicationWillEnterForeground');
  SDL_OnApplicationWillResignActive := GetProcAddress(aDLLHandle, 'SDL_OnApplicationWillResignActive');
  SDL_OnApplicationWillTerminate := GetProcAddress(aDLLHandle, 'SDL_OnApplicationWillTerminate');
  SDL_OpenAudio := GetProcAddress(aDLLHandle, 'SDL_OpenAudio');
  SDL_OpenAudioDevice := GetProcAddress(aDLLHandle, 'SDL_OpenAudioDevice');
  SDL_OpenURL := GetProcAddress(aDLLHandle, 'SDL_OpenURL');
  SDL_PauseAudio := GetProcAddress(aDLLHandle, 'SDL_PauseAudio');
  SDL_PauseAudioDevice := GetProcAddress(aDLLHandle, 'SDL_PauseAudioDevice');
  SDL_PeepEvents := GetProcAddress(aDLLHandle, 'SDL_PeepEvents');
  SDL_PixelFormatEnumToMasks := GetProcAddress(aDLLHandle, 'SDL_PixelFormatEnumToMasks');
  SDL_PollEvent := GetProcAddress(aDLLHandle, 'SDL_PollEvent');
  SDL_pow := GetProcAddress(aDLLHandle, 'SDL_pow');
  SDL_powf := GetProcAddress(aDLLHandle, 'SDL_powf');
  SDL_PremultiplyAlpha := GetProcAddress(aDLLHandle, 'SDL_PremultiplyAlpha');
  SDL_PumpEvents := GetProcAddress(aDLLHandle, 'SDL_PumpEvents');
  SDL_PushEvent := GetProcAddress(aDLLHandle, 'SDL_PushEvent');
  SDL_qsort := GetProcAddress(aDLLHandle, 'SDL_qsort');
  SDL_QueryTexture := GetProcAddress(aDLLHandle, 'SDL_QueryTexture');
  SDL_QueueAudio := GetProcAddress(aDLLHandle, 'SDL_QueueAudio');
  SDL_Quit := GetProcAddress(aDLLHandle, 'SDL_Quit');
  SDL_QuitSubSystem := GetProcAddress(aDLLHandle, 'SDL_QuitSubSystem');
  SDL_RaiseWindow := GetProcAddress(aDLLHandle, 'SDL_RaiseWindow');
  SDL_ReadBE16 := GetProcAddress(aDLLHandle, 'SDL_ReadBE16');
  SDL_ReadBE32 := GetProcAddress(aDLLHandle, 'SDL_ReadBE32');
  SDL_ReadBE64 := GetProcAddress(aDLLHandle, 'SDL_ReadBE64');
  SDL_ReadLE16 := GetProcAddress(aDLLHandle, 'SDL_ReadLE16');
  SDL_ReadLE32 := GetProcAddress(aDLLHandle, 'SDL_ReadLE32');
  SDL_ReadLE64 := GetProcAddress(aDLLHandle, 'SDL_ReadLE64');
  SDL_ReadU8 := GetProcAddress(aDLLHandle, 'SDL_ReadU8');
  SDL_realloc := GetProcAddress(aDLLHandle, 'SDL_realloc');
  SDL_RecordGesture := GetProcAddress(aDLLHandle, 'SDL_RecordGesture');
  SDL_RegisterApp := GetProcAddress(aDLLHandle, 'SDL_RegisterApp');
  SDL_RegisterEvents := GetProcAddress(aDLLHandle, 'SDL_RegisterEvents');
  SDL_RemoveTimer := GetProcAddress(aDLLHandle, 'SDL_RemoveTimer');
  SDL_RenderClear := GetProcAddress(aDLLHandle, 'SDL_RenderClear');
  SDL_RenderCopy := GetProcAddress(aDLLHandle, 'SDL_RenderCopy');
  SDL_RenderCopyEx := GetProcAddress(aDLLHandle, 'SDL_RenderCopyEx');
  SDL_RenderCopyExF := GetProcAddress(aDLLHandle, 'SDL_RenderCopyExF');
  SDL_RenderCopyF := GetProcAddress(aDLLHandle, 'SDL_RenderCopyF');
  SDL_RenderDrawLine := GetProcAddress(aDLLHandle, 'SDL_RenderDrawLine');
  SDL_RenderDrawLineF := GetProcAddress(aDLLHandle, 'SDL_RenderDrawLineF');
  SDL_RenderDrawLines := GetProcAddress(aDLLHandle, 'SDL_RenderDrawLines');
  SDL_RenderDrawLinesF := GetProcAddress(aDLLHandle, 'SDL_RenderDrawLinesF');
  SDL_RenderDrawPoint := GetProcAddress(aDLLHandle, 'SDL_RenderDrawPoint');
  SDL_RenderDrawPointF := GetProcAddress(aDLLHandle, 'SDL_RenderDrawPointF');
  SDL_RenderDrawPoints := GetProcAddress(aDLLHandle, 'SDL_RenderDrawPoints');
  SDL_RenderDrawPointsF := GetProcAddress(aDLLHandle, 'SDL_RenderDrawPointsF');
  SDL_RenderDrawRect := GetProcAddress(aDLLHandle, 'SDL_RenderDrawRect');
  SDL_RenderDrawRectF := GetProcAddress(aDLLHandle, 'SDL_RenderDrawRectF');
  SDL_RenderDrawRects := GetProcAddress(aDLLHandle, 'SDL_RenderDrawRects');
  SDL_RenderDrawRectsF := GetProcAddress(aDLLHandle, 'SDL_RenderDrawRectsF');
  SDL_RenderFillRect := GetProcAddress(aDLLHandle, 'SDL_RenderFillRect');
  SDL_RenderFillRectF := GetProcAddress(aDLLHandle, 'SDL_RenderFillRectF');
  SDL_RenderFillRects := GetProcAddress(aDLLHandle, 'SDL_RenderFillRects');
  SDL_RenderFillRectsF := GetProcAddress(aDLLHandle, 'SDL_RenderFillRectsF');
  SDL_RenderFlush := GetProcAddress(aDLLHandle, 'SDL_RenderFlush');
  SDL_RenderGeometry := GetProcAddress(aDLLHandle, 'SDL_RenderGeometry');
  SDL_RenderGeometryRaw := GetProcAddress(aDLLHandle, 'SDL_RenderGeometryRaw');
  SDL_RenderGetClipRect := GetProcAddress(aDLLHandle, 'SDL_RenderGetClipRect');
  SDL_RenderGetD3D11Device := GetProcAddress(aDLLHandle, 'SDL_RenderGetD3D11Device');
  SDL_RenderGetD3D12Device := GetProcAddress(aDLLHandle, 'SDL_RenderGetD3D12Device');
  SDL_RenderGetD3D9Device := GetProcAddress(aDLLHandle, 'SDL_RenderGetD3D9Device');
  SDL_RenderGetIntegerScale := GetProcAddress(aDLLHandle, 'SDL_RenderGetIntegerScale');
  SDL_RenderGetLogicalSize := GetProcAddress(aDLLHandle, 'SDL_RenderGetLogicalSize');
  SDL_RenderGetMetalCommandEncoder := GetProcAddress(aDLLHandle, 'SDL_RenderGetMetalCommandEncoder');
  SDL_RenderGetMetalLayer := GetProcAddress(aDLLHandle, 'SDL_RenderGetMetalLayer');
  SDL_RenderGetScale := GetProcAddress(aDLLHandle, 'SDL_RenderGetScale');
  SDL_RenderGetViewport := GetProcAddress(aDLLHandle, 'SDL_RenderGetViewport');
  SDL_RenderGetWindow := GetProcAddress(aDLLHandle, 'SDL_RenderGetWindow');
  SDL_RenderIsClipEnabled := GetProcAddress(aDLLHandle, 'SDL_RenderIsClipEnabled');
  SDL_RenderLogicalToWindow := GetProcAddress(aDLLHandle, 'SDL_RenderLogicalToWindow');
  SDL_RenderPresent := GetProcAddress(aDLLHandle, 'SDL_RenderPresent');
  SDL_RenderReadPixels := GetProcAddress(aDLLHandle, 'SDL_RenderReadPixels');
  SDL_RenderSetClipRect := GetProcAddress(aDLLHandle, 'SDL_RenderSetClipRect');
  SDL_RenderSetIntegerScale := GetProcAddress(aDLLHandle, 'SDL_RenderSetIntegerScale');
  SDL_RenderSetLogicalSize := GetProcAddress(aDLLHandle, 'SDL_RenderSetLogicalSize');
  SDL_RenderSetScale := GetProcAddress(aDLLHandle, 'SDL_RenderSetScale');
  SDL_RenderSetViewport := GetProcAddress(aDLLHandle, 'SDL_RenderSetViewport');
  SDL_RenderSetVSync := GetProcAddress(aDLLHandle, 'SDL_RenderSetVSync');
  SDL_RenderTargetSupported := GetProcAddress(aDLLHandle, 'SDL_RenderTargetSupported');
  SDL_RenderWindowToLogical := GetProcAddress(aDLLHandle, 'SDL_RenderWindowToLogical');
  SDL_ReportAssertion := GetProcAddress(aDLLHandle, 'SDL_ReportAssertion');
  SDL_ResetAssertionReport := GetProcAddress(aDLLHandle, 'SDL_ResetAssertionReport');
  SDL_ResetHint := GetProcAddress(aDLLHandle, 'SDL_ResetHint');
  SDL_ResetKeyboard := GetProcAddress(aDLLHandle, 'SDL_ResetKeyboard');
  SDL_RestoreWindow := GetProcAddress(aDLLHandle, 'SDL_RestoreWindow');
  SDL_round := GetProcAddress(aDLLHandle, 'SDL_round');
  SDL_roundf := GetProcAddress(aDLLHandle, 'SDL_roundf');
  SDL_RWclose := GetProcAddress(aDLLHandle, 'SDL_RWclose');
  SDL_RWFromConstMem := GetProcAddress(aDLLHandle, 'SDL_RWFromConstMem');
  SDL_RWFromFile := GetProcAddress(aDLLHandle, 'SDL_RWFromFile');
  SDL_RWFromFP := GetProcAddress(aDLLHandle, 'SDL_RWFromFP');
  SDL_RWFromMem := GetProcAddress(aDLLHandle, 'SDL_RWFromMem');
  SDL_RWread := GetProcAddress(aDLLHandle, 'SDL_RWread');
  SDL_RWseek := GetProcAddress(aDLLHandle, 'SDL_RWseek');
  SDL_RWsize := GetProcAddress(aDLLHandle, 'SDL_RWsize');
  SDL_RWtell := GetProcAddress(aDLLHandle, 'SDL_RWtell');
  SDL_RWwrite := GetProcAddress(aDLLHandle, 'SDL_RWwrite');
  SDL_SaveAllDollarTemplates := GetProcAddress(aDLLHandle, 'SDL_SaveAllDollarTemplates');
  SDL_SaveBMP_RW := GetProcAddress(aDLLHandle, 'SDL_SaveBMP_RW');
  SDL_SaveDollarTemplate := GetProcAddress(aDLLHandle, 'SDL_SaveDollarTemplate');
  SDL_scalbn := GetProcAddress(aDLLHandle, 'SDL_scalbn');
  SDL_scalbnf := GetProcAddress(aDLLHandle, 'SDL_scalbnf');
  SDL_SemPost := GetProcAddress(aDLLHandle, 'SDL_SemPost');
  SDL_SemTryWait := GetProcAddress(aDLLHandle, 'SDL_SemTryWait');
  SDL_SemValue := GetProcAddress(aDLLHandle, 'SDL_SemValue');
  SDL_SemWait := GetProcAddress(aDLLHandle, 'SDL_SemWait');
  SDL_SemWaitTimeout := GetProcAddress(aDLLHandle, 'SDL_SemWaitTimeout');
  SDL_SensorClose := GetProcAddress(aDLLHandle, 'SDL_SensorClose');
  SDL_SensorFromInstanceID := GetProcAddress(aDLLHandle, 'SDL_SensorFromInstanceID');
  SDL_SensorGetData := GetProcAddress(aDLLHandle, 'SDL_SensorGetData');
  SDL_SensorGetDeviceInstanceID := GetProcAddress(aDLLHandle, 'SDL_SensorGetDeviceInstanceID');
  SDL_SensorGetDeviceName := GetProcAddress(aDLLHandle, 'SDL_SensorGetDeviceName');
  SDL_SensorGetDeviceNonPortableType := GetProcAddress(aDLLHandle, 'SDL_SensorGetDeviceNonPortableType');
  SDL_SensorGetDeviceType := GetProcAddress(aDLLHandle, 'SDL_SensorGetDeviceType');
  SDL_SensorGetInstanceID := GetProcAddress(aDLLHandle, 'SDL_SensorGetInstanceID');
  SDL_SensorGetName := GetProcAddress(aDLLHandle, 'SDL_SensorGetName');
  SDL_SensorGetNonPortableType := GetProcAddress(aDLLHandle, 'SDL_SensorGetNonPortableType');
  SDL_SensorGetType := GetProcAddress(aDLLHandle, 'SDL_SensorGetType');
  SDL_SensorOpen := GetProcAddress(aDLLHandle, 'SDL_SensorOpen');
  SDL_SensorUpdate := GetProcAddress(aDLLHandle, 'SDL_SensorUpdate');
  SDL_SetAssertionHandler := GetProcAddress(aDLLHandle, 'SDL_SetAssertionHandler');
  SDL_SetClipboardText := GetProcAddress(aDLLHandle, 'SDL_SetClipboardText');
  SDL_SetClipRect := GetProcAddress(aDLLHandle, 'SDL_SetClipRect');
  SDL_SetColorKey := GetProcAddress(aDLLHandle, 'SDL_SetColorKey');
  SDL_SetCursor := GetProcAddress(aDLLHandle, 'SDL_SetCursor');
  SDL_setenv := GetProcAddress(aDLLHandle, 'SDL_setenv');
  SDL_SetError := GetProcAddress(aDLLHandle, 'SDL_SetError');
  SDL_SetEventFilter := GetProcAddress(aDLLHandle, 'SDL_SetEventFilter');
  SDL_SetHint := GetProcAddress(aDLLHandle, 'SDL_SetHint');
  SDL_SetHintWithPriority := GetProcAddress(aDLLHandle, 'SDL_SetHintWithPriority');
  SDL_SetMainReady := GetProcAddress(aDLLHandle, 'SDL_SetMainReady');
  SDL_SetMemoryFunctions := GetProcAddress(aDLLHandle, 'SDL_SetMemoryFunctions');
  SDL_SetModState := GetProcAddress(aDLLHandle, 'SDL_SetModState');
  SDL_SetPaletteColors := GetProcAddress(aDLLHandle, 'SDL_SetPaletteColors');
  SDL_SetPixelFormatPalette := GetProcAddress(aDLLHandle, 'SDL_SetPixelFormatPalette');
  SDL_SetPrimarySelectionText := GetProcAddress(aDLLHandle, 'SDL_SetPrimarySelectionText');
  SDL_SetRelativeMouseMode := GetProcAddress(aDLLHandle, 'SDL_SetRelativeMouseMode');
  SDL_SetRenderDrawBlendMode := GetProcAddress(aDLLHandle, 'SDL_SetRenderDrawBlendMode');
  SDL_SetRenderDrawColor := GetProcAddress(aDLLHandle, 'SDL_SetRenderDrawColor');
  SDL_SetRenderTarget := GetProcAddress(aDLLHandle, 'SDL_SetRenderTarget');
  SDL_SetSurfaceAlphaMod := GetProcAddress(aDLLHandle, 'SDL_SetSurfaceAlphaMod');
  SDL_SetSurfaceBlendMode := GetProcAddress(aDLLHandle, 'SDL_SetSurfaceBlendMode');
  SDL_SetSurfaceColorMod := GetProcAddress(aDLLHandle, 'SDL_SetSurfaceColorMod');
  SDL_SetSurfacePalette := GetProcAddress(aDLLHandle, 'SDL_SetSurfacePalette');
  SDL_SetSurfaceRLE := GetProcAddress(aDLLHandle, 'SDL_SetSurfaceRLE');
  SDL_SetTextInputRect := GetProcAddress(aDLLHandle, 'SDL_SetTextInputRect');
  SDL_SetTextureAlphaMod := GetProcAddress(aDLLHandle, 'SDL_SetTextureAlphaMod');
  SDL_SetTextureBlendMode := GetProcAddress(aDLLHandle, 'SDL_SetTextureBlendMode');
  SDL_SetTextureColorMod := GetProcAddress(aDLLHandle, 'SDL_SetTextureColorMod');
  SDL_SetTextureScaleMode := GetProcAddress(aDLLHandle, 'SDL_SetTextureScaleMode');
  SDL_SetTextureUserData := GetProcAddress(aDLLHandle, 'SDL_SetTextureUserData');
  SDL_SetThreadPriority := GetProcAddress(aDLLHandle, 'SDL_SetThreadPriority');
  SDL_SetWindowAlwaysOnTop := GetProcAddress(aDLLHandle, 'SDL_SetWindowAlwaysOnTop');
  SDL_SetWindowBordered := GetProcAddress(aDLLHandle, 'SDL_SetWindowBordered');
  SDL_SetWindowBrightness := GetProcAddress(aDLLHandle, 'SDL_SetWindowBrightness');
  SDL_SetWindowData := GetProcAddress(aDLLHandle, 'SDL_SetWindowData');
  SDL_SetWindowDisplayMode := GetProcAddress(aDLLHandle, 'SDL_SetWindowDisplayMode');
  SDL_SetWindowFullscreen := GetProcAddress(aDLLHandle, 'SDL_SetWindowFullscreen');
  SDL_SetWindowGammaRamp := GetProcAddress(aDLLHandle, 'SDL_SetWindowGammaRamp');
  SDL_SetWindowGrab := GetProcAddress(aDLLHandle, 'SDL_SetWindowGrab');
  SDL_SetWindowHitTest := GetProcAddress(aDLLHandle, 'SDL_SetWindowHitTest');
  SDL_SetWindowIcon := GetProcAddress(aDLLHandle, 'SDL_SetWindowIcon');
  SDL_SetWindowInputFocus := GetProcAddress(aDLLHandle, 'SDL_SetWindowInputFocus');
  SDL_SetWindowKeyboardGrab := GetProcAddress(aDLLHandle, 'SDL_SetWindowKeyboardGrab');
  SDL_SetWindowMaximumSize := GetProcAddress(aDLLHandle, 'SDL_SetWindowMaximumSize');
  SDL_SetWindowMinimumSize := GetProcAddress(aDLLHandle, 'SDL_SetWindowMinimumSize');
  SDL_SetWindowModalFor := GetProcAddress(aDLLHandle, 'SDL_SetWindowModalFor');
  SDL_SetWindowMouseGrab := GetProcAddress(aDLLHandle, 'SDL_SetWindowMouseGrab');
  SDL_SetWindowMouseRect := GetProcAddress(aDLLHandle, 'SDL_SetWindowMouseRect');
  SDL_SetWindowOpacity := GetProcAddress(aDLLHandle, 'SDL_SetWindowOpacity');
  SDL_SetWindowPosition := GetProcAddress(aDLLHandle, 'SDL_SetWindowPosition');
  SDL_SetWindowResizable := GetProcAddress(aDLLHandle, 'SDL_SetWindowResizable');
  SDL_SetWindowShape := GetProcAddress(aDLLHandle, 'SDL_SetWindowShape');
  SDL_SetWindowSize := GetProcAddress(aDLLHandle, 'SDL_SetWindowSize');
  SDL_SetWindowsMessageHook := GetProcAddress(aDLLHandle, 'SDL_SetWindowsMessageHook');
  SDL_SetWindowTitle := GetProcAddress(aDLLHandle, 'SDL_SetWindowTitle');
  SDL_SetYUVConversionMode := GetProcAddress(aDLLHandle, 'SDL_SetYUVConversionMode');
  SDL_ShowCursor := GetProcAddress(aDLLHandle, 'SDL_ShowCursor');
  SDL_ShowMessageBox := GetProcAddress(aDLLHandle, 'SDL_ShowMessageBox');
  SDL_ShowSimpleMessageBox := GetProcAddress(aDLLHandle, 'SDL_ShowSimpleMessageBox');
  SDL_ShowWindow := GetProcAddress(aDLLHandle, 'SDL_ShowWindow');
  SDL_SIMDAlloc := GetProcAddress(aDLLHandle, 'SDL_SIMDAlloc');
  SDL_SIMDFree := GetProcAddress(aDLLHandle, 'SDL_SIMDFree');
  SDL_SIMDGetAlignment := GetProcAddress(aDLLHandle, 'SDL_SIMDGetAlignment');
  SDL_SIMDRealloc := GetProcAddress(aDLLHandle, 'SDL_SIMDRealloc');
  SDL_sin := GetProcAddress(aDLLHandle, 'SDL_sin');
  SDL_sinf := GetProcAddress(aDLLHandle, 'SDL_sinf');
  SDL_snprintf := GetProcAddress(aDLLHandle, 'SDL_snprintf');
  SDL_SoftStretch := GetProcAddress(aDLLHandle, 'SDL_SoftStretch');
  SDL_SoftStretchLinear := GetProcAddress(aDLLHandle, 'SDL_SoftStretchLinear');
  SDL_sqrt := GetProcAddress(aDLLHandle, 'SDL_sqrt');
  SDL_sqrtf := GetProcAddress(aDLLHandle, 'SDL_sqrtf');
  SDL_sscanf := GetProcAddress(aDLLHandle, 'SDL_sscanf');
  SDL_StartTextInput := GetProcAddress(aDLLHandle, 'SDL_StartTextInput');
  SDL_StopTextInput := GetProcAddress(aDLLHandle, 'SDL_StopTextInput');
  SDL_strcasecmp := GetProcAddress(aDLLHandle, 'SDL_strcasecmp');
  SDL_strchr := GetProcAddress(aDLLHandle, 'SDL_strchr');
  SDL_strcmp := GetProcAddress(aDLLHandle, 'SDL_strcmp');
  SDL_strdup := GetProcAddress(aDLLHandle, 'SDL_strdup');
  SDL_strlcat := GetProcAddress(aDLLHandle, 'SDL_strlcat');
  SDL_strlcpy := GetProcAddress(aDLLHandle, 'SDL_strlcpy');
  SDL_strlen := GetProcAddress(aDLLHandle, 'SDL_strlen');
  SDL_strlwr := GetProcAddress(aDLLHandle, 'SDL_strlwr');
  SDL_strncasecmp := GetProcAddress(aDLLHandle, 'SDL_strncasecmp');
  SDL_strncmp := GetProcAddress(aDLLHandle, 'SDL_strncmp');
  SDL_strrchr := GetProcAddress(aDLLHandle, 'SDL_strrchr');
  SDL_strrev := GetProcAddress(aDLLHandle, 'SDL_strrev');
  SDL_strstr := GetProcAddress(aDLLHandle, 'SDL_strstr');
  SDL_strtod := GetProcAddress(aDLLHandle, 'SDL_strtod');
  SDL_strtokr := GetProcAddress(aDLLHandle, 'SDL_strtokr');
  SDL_strtol := GetProcAddress(aDLLHandle, 'SDL_strtol');
  SDL_strtoll := GetProcAddress(aDLLHandle, 'SDL_strtoll');
  SDL_strtoul := GetProcAddress(aDLLHandle, 'SDL_strtoul');
  SDL_strtoull := GetProcAddress(aDLLHandle, 'SDL_strtoull');
  SDL_strupr := GetProcAddress(aDLLHandle, 'SDL_strupr');
  SDL_tan := GetProcAddress(aDLLHandle, 'SDL_tan');
  SDL_tanf := GetProcAddress(aDLLHandle, 'SDL_tanf');
  SDL_ThreadID := GetProcAddress(aDLLHandle, 'SDL_ThreadID');
  SDL_TLSCleanup := GetProcAddress(aDLLHandle, 'SDL_TLSCleanup');
  SDL_TLSCreate := GetProcAddress(aDLLHandle, 'SDL_TLSCreate');
  SDL_TLSGet := GetProcAddress(aDLLHandle, 'SDL_TLSGet');
  SDL_TLSSet := GetProcAddress(aDLLHandle, 'SDL_TLSSet');
  SDL_tolower := GetProcAddress(aDLLHandle, 'SDL_tolower');
  SDL_toupper := GetProcAddress(aDLLHandle, 'SDL_toupper');
  SDL_trunc := GetProcAddress(aDLLHandle, 'SDL_trunc');
  SDL_truncf := GetProcAddress(aDLLHandle, 'SDL_truncf');
  SDL_TryLockMutex := GetProcAddress(aDLLHandle, 'SDL_TryLockMutex');
  SDL_uitoa := GetProcAddress(aDLLHandle, 'SDL_uitoa');
  SDL_ulltoa := GetProcAddress(aDLLHandle, 'SDL_ulltoa');
  SDL_ultoa := GetProcAddress(aDLLHandle, 'SDL_ultoa');
  SDL_UnionFRect := GetProcAddress(aDLLHandle, 'SDL_UnionFRect');
  SDL_UnionRect := GetProcAddress(aDLLHandle, 'SDL_UnionRect');
  SDL_UnloadObject := GetProcAddress(aDLLHandle, 'SDL_UnloadObject');
  SDL_UnlockAudio := GetProcAddress(aDLLHandle, 'SDL_UnlockAudio');
  SDL_UnlockAudioDevice := GetProcAddress(aDLLHandle, 'SDL_UnlockAudioDevice');
  SDL_UnlockJoysticks := GetProcAddress(aDLLHandle, 'SDL_UnlockJoysticks');
  SDL_UnlockMutex := GetProcAddress(aDLLHandle, 'SDL_UnlockMutex');
  SDL_UnlockSensors := GetProcAddress(aDLLHandle, 'SDL_UnlockSensors');
  SDL_UnlockSurface := GetProcAddress(aDLLHandle, 'SDL_UnlockSurface');
  SDL_UnlockTexture := GetProcAddress(aDLLHandle, 'SDL_UnlockTexture');
  SDL_UnregisterApp := GetProcAddress(aDLLHandle, 'SDL_UnregisterApp');
  SDL_UpdateNVTexture := GetProcAddress(aDLLHandle, 'SDL_UpdateNVTexture');
  SDL_UpdateTexture := GetProcAddress(aDLLHandle, 'SDL_UpdateTexture');
  SDL_UpdateWindowSurface := GetProcAddress(aDLLHandle, 'SDL_UpdateWindowSurface');
  SDL_UpdateWindowSurfaceRects := GetProcAddress(aDLLHandle, 'SDL_UpdateWindowSurfaceRects');
  SDL_UpdateYUVTexture := GetProcAddress(aDLLHandle, 'SDL_UpdateYUVTexture');
  SDL_UpperBlit := GetProcAddress(aDLLHandle, 'SDL_UpperBlit');
  SDL_UpperBlitScaled := GetProcAddress(aDLLHandle, 'SDL_UpperBlitScaled');
  SDL_utf8strlcpy := GetProcAddress(aDLLHandle, 'SDL_utf8strlcpy');
  SDL_utf8strlen := GetProcAddress(aDLLHandle, 'SDL_utf8strlen');
  SDL_utf8strnlen := GetProcAddress(aDLLHandle, 'SDL_utf8strnlen');
  SDL_vasprintf := GetProcAddress(aDLLHandle, 'SDL_vasprintf');
  SDL_VideoInit := GetProcAddress(aDLLHandle, 'SDL_VideoInit');
  SDL_VideoQuit := GetProcAddress(aDLLHandle, 'SDL_VideoQuit');
  SDL_vsnprintf := GetProcAddress(aDLLHandle, 'SDL_vsnprintf');
  SDL_vsscanf := GetProcAddress(aDLLHandle, 'SDL_vsscanf');
  SDL_WaitEvent := GetProcAddress(aDLLHandle, 'SDL_WaitEvent');
  SDL_WaitEventTimeout := GetProcAddress(aDLLHandle, 'SDL_WaitEventTimeout');
  SDL_WaitThread := GetProcAddress(aDLLHandle, 'SDL_WaitThread');
  SDL_WarpMouseGlobal := GetProcAddress(aDLLHandle, 'SDL_WarpMouseGlobal');
  SDL_WarpMouseInWindow := GetProcAddress(aDLLHandle, 'SDL_WarpMouseInWindow');
  SDL_WasInit := GetProcAddress(aDLLHandle, 'SDL_WasInit');
  SDL_wcscasecmp := GetProcAddress(aDLLHandle, 'SDL_wcscasecmp');
  SDL_wcscmp := GetProcAddress(aDLLHandle, 'SDL_wcscmp');
  SDL_wcsdup := GetProcAddress(aDLLHandle, 'SDL_wcsdup');
  SDL_wcslcat := GetProcAddress(aDLLHandle, 'SDL_wcslcat');
  SDL_wcslcpy := GetProcAddress(aDLLHandle, 'SDL_wcslcpy');
  SDL_wcslen := GetProcAddress(aDLLHandle, 'SDL_wcslen');
  SDL_wcsncasecmp := GetProcAddress(aDLLHandle, 'SDL_wcsncasecmp');
  SDL_wcsncmp := GetProcAddress(aDLLHandle, 'SDL_wcsncmp');
  SDL_wcsstr := GetProcAddress(aDLLHandle, 'SDL_wcsstr');
  SDL_WriteBE16 := GetProcAddress(aDLLHandle, 'SDL_WriteBE16');
  SDL_WriteBE32 := GetProcAddress(aDLLHandle, 'SDL_WriteBE32');
  SDL_WriteBE64 := GetProcAddress(aDLLHandle, 'SDL_WriteBE64');
  SDL_WriteLE16 := GetProcAddress(aDLLHandle, 'SDL_WriteLE16');
  SDL_WriteLE32 := GetProcAddress(aDLLHandle, 'SDL_WriteLE32');
  SDL_WriteLE64 := GetProcAddress(aDLLHandle, 'SDL_WriteLE64');
  SDL_WriteU8 := GetProcAddress(aDLLHandle, 'SDL_WriteU8');
  SDLNet_AddSocket := GetProcAddress(aDLLHandle, 'SDLNet_AddSocket');
  SDLNet_AllocPacket := GetProcAddress(aDLLHandle, 'SDLNet_AllocPacket');
  SDLNet_AllocPacketV := GetProcAddress(aDLLHandle, 'SDLNet_AllocPacketV');
  SDLNet_AllocSocketSet := GetProcAddress(aDLLHandle, 'SDLNet_AllocSocketSet');
  SDLNet_CheckSockets := GetProcAddress(aDLLHandle, 'SDLNet_CheckSockets');
  SDLNet_DelSocket := GetProcAddress(aDLLHandle, 'SDLNet_DelSocket');
  SDLNet_FreePacket := GetProcAddress(aDLLHandle, 'SDLNet_FreePacket');
  SDLNet_FreePacketV := GetProcAddress(aDLLHandle, 'SDLNet_FreePacketV');
  SDLNet_FreeSocketSet := GetProcAddress(aDLLHandle, 'SDLNet_FreeSocketSet');
  SDLNet_GetError := GetProcAddress(aDLLHandle, 'SDLNet_GetError');
  SDLNet_GetLocalAddresses := GetProcAddress(aDLLHandle, 'SDLNet_GetLocalAddresses');
  SDLNet_Init := GetProcAddress(aDLLHandle, 'SDLNet_Init');
  SDLNet_Linked_Version := GetProcAddress(aDLLHandle, 'SDLNet_Linked_Version');
  SDLNet_Quit := GetProcAddress(aDLLHandle, 'SDLNet_Quit');
  SDLNet_ResizePacket := GetProcAddress(aDLLHandle, 'SDLNet_ResizePacket');
  SDLNet_ResolveHost := GetProcAddress(aDLLHandle, 'SDLNet_ResolveHost');
  SDLNet_ResolveIP := GetProcAddress(aDLLHandle, 'SDLNet_ResolveIP');
  SDLNet_SetError := GetProcAddress(aDLLHandle, 'SDLNet_SetError');
  SDLNet_TCP_Accept := GetProcAddress(aDLLHandle, 'SDLNet_TCP_Accept');
  SDLNet_TCP_Close := GetProcAddress(aDLLHandle, 'SDLNet_TCP_Close');
  SDLNet_TCP_GetPeerAddress := GetProcAddress(aDLLHandle, 'SDLNet_TCP_GetPeerAddress');
  SDLNet_TCP_Open := GetProcAddress(aDLLHandle, 'SDLNet_TCP_Open');
  SDLNet_TCP_Recv := GetProcAddress(aDLLHandle, 'SDLNet_TCP_Recv');
  SDLNet_TCP_Send := GetProcAddress(aDLLHandle, 'SDLNet_TCP_Send');
  SDLNet_UDP_Bind := GetProcAddress(aDLLHandle, 'SDLNet_UDP_Bind');
  SDLNet_UDP_Close := GetProcAddress(aDLLHandle, 'SDLNet_UDP_Close');
  SDLNet_UDP_GetPeerAddress := GetProcAddress(aDLLHandle, 'SDLNet_UDP_GetPeerAddress');
  SDLNet_UDP_Open := GetProcAddress(aDLLHandle, 'SDLNet_UDP_Open');
  SDLNet_UDP_Recv := GetProcAddress(aDLLHandle, 'SDLNet_UDP_Recv');
  SDLNet_UDP_RecvV := GetProcAddress(aDLLHandle, 'SDLNet_UDP_RecvV');
  SDLNet_UDP_Send := GetProcAddress(aDLLHandle, 'SDLNet_UDP_Send');
  SDLNet_UDP_SendV := GetProcAddress(aDLLHandle, 'SDLNet_UDP_SendV');
  SDLNet_UDP_SetPacketLoss := GetProcAddress(aDLLHandle, 'SDLNet_UDP_SetPacketLoss');
  SDLNet_UDP_Unbind := GetProcAddress(aDLLHandle, 'SDLNet_UDP_Unbind');
  stringColor := GetProcAddress(aDLLHandle, 'stringColor');
  stringRGBA := GetProcAddress(aDLLHandle, 'stringRGBA');
  texturedPolygon := GetProcAddress(aDLLHandle, 'texturedPolygon');
  thickLineColor := GetProcAddress(aDLLHandle, 'thickLineColor');
  thickLineRGBA := GetProcAddress(aDLLHandle, 'thickLineRGBA');
  trigonColor := GetProcAddress(aDLLHandle, 'trigonColor');
  trigonRGBA := GetProcAddress(aDLLHandle, 'trigonRGBA');
  TTF_ByteSwappedUNICODE := GetProcAddress(aDLLHandle, 'TTF_ByteSwappedUNICODE');
  TTF_CloseFont := GetProcAddress(aDLLHandle, 'TTF_CloseFont');
  TTF_FontAscent := GetProcAddress(aDLLHandle, 'TTF_FontAscent');
  TTF_FontDescent := GetProcAddress(aDLLHandle, 'TTF_FontDescent');
  TTF_FontFaceFamilyName := GetProcAddress(aDLLHandle, 'TTF_FontFaceFamilyName');
  TTF_FontFaceIsFixedWidth := GetProcAddress(aDLLHandle, 'TTF_FontFaceIsFixedWidth');
  TTF_FontFaces := GetProcAddress(aDLLHandle, 'TTF_FontFaces');
  TTF_FontFaceStyleName := GetProcAddress(aDLLHandle, 'TTF_FontFaceStyleName');
  TTF_FontHeight := GetProcAddress(aDLLHandle, 'TTF_FontHeight');
  TTF_FontLineSkip := GetProcAddress(aDLLHandle, 'TTF_FontLineSkip');
  TTF_GetFontHinting := GetProcAddress(aDLLHandle, 'TTF_GetFontHinting');
  TTF_GetFontKerning := GetProcAddress(aDLLHandle, 'TTF_GetFontKerning');
  TTF_GetFontKerningSize := GetProcAddress(aDLLHandle, 'TTF_GetFontKerningSize');
  TTF_GetFontKerningSizeGlyphs := GetProcAddress(aDLLHandle, 'TTF_GetFontKerningSizeGlyphs');
  TTF_GetFontKerningSizeGlyphs32 := GetProcAddress(aDLLHandle, 'TTF_GetFontKerningSizeGlyphs32');
  TTF_GetFontOutline := GetProcAddress(aDLLHandle, 'TTF_GetFontOutline');
  TTF_GetFontSDF := GetProcAddress(aDLLHandle, 'TTF_GetFontSDF');
  TTF_GetFontStyle := GetProcAddress(aDLLHandle, 'TTF_GetFontStyle');
  TTF_GetFontWrappedAlign := GetProcAddress(aDLLHandle, 'TTF_GetFontWrappedAlign');
  TTF_GetFreeTypeVersion := GetProcAddress(aDLLHandle, 'TTF_GetFreeTypeVersion');
  TTF_GetHarfBuzzVersion := GetProcAddress(aDLLHandle, 'TTF_GetHarfBuzzVersion');
  TTF_GlyphIsProvided := GetProcAddress(aDLLHandle, 'TTF_GlyphIsProvided');
  TTF_GlyphIsProvided32 := GetProcAddress(aDLLHandle, 'TTF_GlyphIsProvided32');
  TTF_GlyphMetrics := GetProcAddress(aDLLHandle, 'TTF_GlyphMetrics');
  TTF_GlyphMetrics32 := GetProcAddress(aDLLHandle, 'TTF_GlyphMetrics32');
  TTF_Init := GetProcAddress(aDLLHandle, 'TTF_Init');
  TTF_Linked_Version := GetProcAddress(aDLLHandle, 'TTF_Linked_Version');
  TTF_MeasureText := GetProcAddress(aDLLHandle, 'TTF_MeasureText');
  TTF_MeasureUNICODE := GetProcAddress(aDLLHandle, 'TTF_MeasureUNICODE');
  TTF_MeasureUTF8 := GetProcAddress(aDLLHandle, 'TTF_MeasureUTF8');
  TTF_OpenFont := GetProcAddress(aDLLHandle, 'TTF_OpenFont');
  TTF_OpenFontDPI := GetProcAddress(aDLLHandle, 'TTF_OpenFontDPI');
  TTF_OpenFontDPIRW := GetProcAddress(aDLLHandle, 'TTF_OpenFontDPIRW');
  TTF_OpenFontIndex := GetProcAddress(aDLLHandle, 'TTF_OpenFontIndex');
  TTF_OpenFontIndexDPI := GetProcAddress(aDLLHandle, 'TTF_OpenFontIndexDPI');
  TTF_OpenFontIndexDPIRW := GetProcAddress(aDLLHandle, 'TTF_OpenFontIndexDPIRW');
  TTF_OpenFontIndexRW := GetProcAddress(aDLLHandle, 'TTF_OpenFontIndexRW');
  TTF_OpenFontRW := GetProcAddress(aDLLHandle, 'TTF_OpenFontRW');
  TTF_Quit := GetProcAddress(aDLLHandle, 'TTF_Quit');
  TTF_RenderGlyph_Blended := GetProcAddress(aDLLHandle, 'TTF_RenderGlyph_Blended');
  TTF_RenderGlyph_LCD := GetProcAddress(aDLLHandle, 'TTF_RenderGlyph_LCD');
  TTF_RenderGlyph_Shaded := GetProcAddress(aDLLHandle, 'TTF_RenderGlyph_Shaded');
  TTF_RenderGlyph_Solid := GetProcAddress(aDLLHandle, 'TTF_RenderGlyph_Solid');
  TTF_RenderGlyph32_Blended := GetProcAddress(aDLLHandle, 'TTF_RenderGlyph32_Blended');
  TTF_RenderGlyph32_LCD := GetProcAddress(aDLLHandle, 'TTF_RenderGlyph32_LCD');
  TTF_RenderGlyph32_Shaded := GetProcAddress(aDLLHandle, 'TTF_RenderGlyph32_Shaded');
  TTF_RenderGlyph32_Solid := GetProcAddress(aDLLHandle, 'TTF_RenderGlyph32_Solid');
  TTF_RenderText_Blended := GetProcAddress(aDLLHandle, 'TTF_RenderText_Blended');
  TTF_RenderText_Blended_Wrapped := GetProcAddress(aDLLHandle, 'TTF_RenderText_Blended_Wrapped');
  TTF_RenderText_LCD := GetProcAddress(aDLLHandle, 'TTF_RenderText_LCD');
  TTF_RenderText_LCD_Wrapped := GetProcAddress(aDLLHandle, 'TTF_RenderText_LCD_Wrapped');
  TTF_RenderText_Shaded := GetProcAddress(aDLLHandle, 'TTF_RenderText_Shaded');
  TTF_RenderText_Shaded_Wrapped := GetProcAddress(aDLLHandle, 'TTF_RenderText_Shaded_Wrapped');
  TTF_RenderText_Solid := GetProcAddress(aDLLHandle, 'TTF_RenderText_Solid');
  TTF_RenderText_Solid_Wrapped := GetProcAddress(aDLLHandle, 'TTF_RenderText_Solid_Wrapped');
  TTF_RenderUNICODE_Blended := GetProcAddress(aDLLHandle, 'TTF_RenderUNICODE_Blended');
  TTF_RenderUNICODE_Blended_Wrapped := GetProcAddress(aDLLHandle, 'TTF_RenderUNICODE_Blended_Wrapped');
  TTF_RenderUNICODE_LCD := GetProcAddress(aDLLHandle, 'TTF_RenderUNICODE_LCD');
  TTF_RenderUNICODE_LCD_Wrapped := GetProcAddress(aDLLHandle, 'TTF_RenderUNICODE_LCD_Wrapped');
  TTF_RenderUNICODE_Shaded := GetProcAddress(aDLLHandle, 'TTF_RenderUNICODE_Shaded');
  TTF_RenderUNICODE_Shaded_Wrapped := GetProcAddress(aDLLHandle, 'TTF_RenderUNICODE_Shaded_Wrapped');
  TTF_RenderUNICODE_Solid := GetProcAddress(aDLLHandle, 'TTF_RenderUNICODE_Solid');
  TTF_RenderUNICODE_Solid_Wrapped := GetProcAddress(aDLLHandle, 'TTF_RenderUNICODE_Solid_Wrapped');
  TTF_RenderUTF8_Blended := GetProcAddress(aDLLHandle, 'TTF_RenderUTF8_Blended');
  TTF_RenderUTF8_Blended_Wrapped := GetProcAddress(aDLLHandle, 'TTF_RenderUTF8_Blended_Wrapped');
  TTF_RenderUTF8_LCD := GetProcAddress(aDLLHandle, 'TTF_RenderUTF8_LCD');
  TTF_RenderUTF8_LCD_Wrapped := GetProcAddress(aDLLHandle, 'TTF_RenderUTF8_LCD_Wrapped');
  TTF_RenderUTF8_Shaded := GetProcAddress(aDLLHandle, 'TTF_RenderUTF8_Shaded');
  TTF_RenderUTF8_Shaded_Wrapped := GetProcAddress(aDLLHandle, 'TTF_RenderUTF8_Shaded_Wrapped');
  TTF_RenderUTF8_Solid := GetProcAddress(aDLLHandle, 'TTF_RenderUTF8_Solid');
  TTF_RenderUTF8_Solid_Wrapped := GetProcAddress(aDLLHandle, 'TTF_RenderUTF8_Solid_Wrapped');
  TTF_SetDirection := GetProcAddress(aDLLHandle, 'TTF_SetDirection');
  TTF_SetFontDirection := GetProcAddress(aDLLHandle, 'TTF_SetFontDirection');
  TTF_SetFontHinting := GetProcAddress(aDLLHandle, 'TTF_SetFontHinting');
  TTF_SetFontKerning := GetProcAddress(aDLLHandle, 'TTF_SetFontKerning');
  TTF_SetFontOutline := GetProcAddress(aDLLHandle, 'TTF_SetFontOutline');
  TTF_SetFontScriptName := GetProcAddress(aDLLHandle, 'TTF_SetFontScriptName');
  TTF_SetFontSDF := GetProcAddress(aDLLHandle, 'TTF_SetFontSDF');
  TTF_SetFontSize := GetProcAddress(aDLLHandle, 'TTF_SetFontSize');
  TTF_SetFontSizeDPI := GetProcAddress(aDLLHandle, 'TTF_SetFontSizeDPI');
  TTF_SetFontStyle := GetProcAddress(aDLLHandle, 'TTF_SetFontStyle');
  TTF_SetFontWrappedAlign := GetProcAddress(aDLLHandle, 'TTF_SetFontWrappedAlign');
  TTF_SetScript := GetProcAddress(aDLLHandle, 'TTF_SetScript');
  TTF_SizeText := GetProcAddress(aDLLHandle, 'TTF_SizeText');
  TTF_SizeUNICODE := GetProcAddress(aDLLHandle, 'TTF_SizeUNICODE');
  TTF_SizeUTF8 := GetProcAddress(aDLLHandle, 'TTF_SizeUTF8');
  TTF_WasInit := GetProcAddress(aDLLHandle, 'TTF_WasInit');
  vlineColor := GetProcAddress(aDLLHandle, 'vlineColor');
  vlineRGBA := GetProcAddress(aDLLHandle, 'vlineRGBA');
  zipClose := GetProcAddress(aDLLHandle, 'zipClose');
  zipCloseFileInZip := GetProcAddress(aDLLHandle, 'zipCloseFileInZip');
  zipOpen := GetProcAddress(aDLLHandle, 'zipOpen');
  zipOpenNewFileInZip3 := GetProcAddress(aDLLHandle, 'zipOpenNewFileInZip3');
  zipWriteInFileInZip := GetProcAddress(aDLLHandle, 'zipWriteInFileInZip');
{$ENDREGION}
end;

// ==========================================================================
const
  cDllResName  = '6c369f7a70734a64a368fad73ebed671';
  
var
  uDllHandle: THandle = 0;
  uDllFilename: string = '';

procedure AbortDLL;
begin
  Halt;
end;

procedure LoadDLL;
var
  LResStream: TResourceStream;
  LPath: string;
begin
  if uDllHandle <> 0 then Exit;
  if not Boolean((FindResource(HInstance, PChar(cDllResName), RT_RCDATA) <> 0)) then AbortDLL;
  LResStream := TResourceStream.Create(HInstance, cDLLResName, RT_RCDATA);
  try
    LPath := TPath.Combine(TPath.GetTempPath, TPath.GetGUIDFileName.ToLower + '.tmp');
    LResStream.SaveToFile(LPath);
    if not TFile.Exists(LPath) then AbortDLL;
    uDllFilename := LPath;
    uDllHandle := SafeLoadLibrary(uDllFilename);
    if uDllHandle = 0 then AbortDLL;
    GetExports(uDllHandle);
  finally
    LResStream.Free;
  end;
end;

procedure UnloadDLL;
begin
  if uDllHandle = 0 then Exit;
  FreeLibrary(uDllHandle);
  uDllHandle := 0;
  if not TFile.Exists(uDllFilename) then Exit;
  TFile.Delete(uDllFilename);
  if not TFile.Exists(uDllFilename) then
    uDllFilename := '';
end;


